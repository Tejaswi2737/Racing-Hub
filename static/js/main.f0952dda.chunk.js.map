{"version":3,"sources":["images/Home.gif","context/BetSlipContext.js","history.js","actions/index.js","components/Nav/Menu.js","components/Nav/Header.js","components/Next/NextRace.js","components/Next/NextList.js","components/BetSlip/BetSlipHome.js","components/Nav/RespHeader.js","components/Screens/NextScreen.js","components/Today/TodayRacingDetails.js","components/Today/TodayDetails.js","components/Screens/TodayR.js","components/Screens/TodayG.js","components/Screens/TodayH.js","components/RaceDetail/RaceDetails.js","components/Home/NextListHome.js","components/Screens/RaceDetailsPage.js","components/Screens/Home.js","components/Screens/PlaceBetScreen/RaceDetailsPageWin.js","components/Screens/PlaceBetScreen/RaceDetailsPageQuinella.js","components/Screens/PlaceBetScreen/RaceDetailsPageTrifecta.js","components/Screens/PlaceBetScreen/RaceDetailsPageFirst4.js","components/Screens/PlaceBetScreen/RaceDetailsPageExacta.js","components/Screens/PlaceBetScreen/RaceDetailsPageDuet.js","App.js","reducers/index.js","reducers/nextReducer.js","reducers/nextReducerHome.js","reducers/todayRacing.js","reducers/racingDetail.js","reducers/meetingDetails.js","reducers/pathParamReducer.js","reducers/winPlaceBetreducer.js","reducers/betSlipInd.js","reducers/allBetSlipData.js","reducers/deleteBetSlip.js","reducers/screenStatusReducers.js","reducers/remainingBetSlipData.js","reducers/countBetSlipData.js","reducers/postWinPlace.js","index.js"],"names":["module","exports","Context","React","createContext","BetSlipStore","state","betSlipFormatWin","onBetSlipChange","betSlipFormat","setState","onBetSlipAdd","Provider","value","this","props","children","Component","createHistory","fetchTodayRacing","dispatch","type","payload","meetingDetailsAll","fetchNextRace","nextData","addBetSlipData","betSlipind","remainingBetSlipData","remaining","betSlipScreen","screen","allBetSlipData","dataAll","MenuView","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","now","className","exact","to","Header","id","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","gridList","flexWrap","transform","NextRace","classes","useState","nextRace","setnextRace","nextRaceGrey","setnextRaceGrey","nextRaceHarness","setnextRaceHarness","Race","setRace","Grey","setGrey","Harness","setHarness","firstTime","setfirstTime","firstNumber","setfirstNumber","setfetched","useEffect","next","raceStartTime","raceNumber","showLoading","setShowLoading","timerToClearSomewhere","useRef","current","setInterval","clearInterval","setTimeout","map","item","meeting","raceType","oldArray","duration","left","delta","Math","abs","floor","hours","minutes","seconds","renderTodayTableList","title","query","Grid","xs","pathname","meetingName","venueMnemonic","slot","place","code","location","onClick","container","slice","NextList","width","backgroundColor","background","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","aria-label","connect","betSlipInd","allBetSlip","deleteBetSlip","remainingBetSlip","screenStatus","postWinPlace","deleteBetSlipData","betSlipDelete","postWinPlaceBets","betData","poolFinalList","deletedBets","setdeletedBets","RemainingBets","setRemainingBets","finalRemainingBets","setfinalRemainingBets","placeWinPlaceBetList","setplaceWinPlaceBetList","showCurrency","setshowCurrency","setdeleted","startSlip","setstartSlip","settypeBet","console","log","users","rem","Object","values","grouped","_","reduce","result","user","name","push","poolList","keys","poolname","groupedRunnersNo","runners","accumulator","currentValue","concat","allNames","itemList","winList","placeList","i","isInteger","parseInt","pos","findIndex","win","itemPool","items","runnnerInd","style","maxHeight","no","updateFieldChanged","e","preventDefault","newArr","target","key","placeholder","min","isNaN","betSlipPlaceInput","obje","filter","e1","deleteSingleBet","height","sumBy","RespHeader","TodayRacingDetails","racingSlots","todayRacing","races","Location","raceStatus","st","getMinutes","getHours","startTime","Array","isArray","results","class","ownProps","detail","todayData","settodayData","newArray","el","fetchToday","fetchTodayRaceInfo","racingInfo","meetingDetails","racingDetail","countBetSlip","bet_pool_fh_1","bet_pool_fh_2","fetchRaceDetails","data","raceDetailsResults1","raceDetailsResults2","raceDetailsResults3","raceDetailsResults4","raceDetailsResults5","raceDetailsResults6","raceDetailsResults7","raceDetailsResults8","raceDetailsResults9","raceDetailsResults10","raceDetailsResults11","raceDetailsResults12","fetchMeetingDetails","countBetSlipData","count","raceData","setraceData","setcount","runner_win_place","setrunner_win_place","initialValue","initialValuePlace","place_slot","setplace_slot","races_list","runnerInfoBody","runner_item","runnerNumber","runnerName","riderDriverName","trainerName","handleClick","returnWin","returnPlace","raceName","raceDistance","prizeMoney","raceSlots","toteWin","totePlace","resultsTable","exoticResults","exotic_item","wageringProduct","Results","Dividend","exoticTable","runnerInfoheader","runnerInfo","poolTotals","total_item","poolTotal","poolTot","renderTodayHome","details","Home","hot","history","basename","process","path","component","NextScreen","TodayR","TodayG","TodayH","RaceDetailsPageWin","RaceDetailsPageWinQuinella","RaceDetailsPageWinTrifecta","RaceDetailsPageWinFirst4","RaceDetailsPageWinExacta","RaceDetailsPageWinDuet","combineReducers","action","nextHome","pathParams","winPlaceBet","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f0952dda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Home.4a2d5568.gif\";","import React from 'react';\nconst Context= React.createContext(\n    {\n\n    });\n\nexport class BetSlipStore extends React.Component {\n    state={\n        betSlipFormatWin:[]\n    };\n    onBetSlipChange=(betSlipFormat)=>{\n        this.setState({betSlipFormat})\n    };\n    onBetSlipAdd=(betSlipFormat)=>{\n        this.setState(...betSlipFormat,{betSlipFormat})\n    };\n    render() {\n        return (\n            <Context.Provider value=\n                {{...this.state,\n                    onBetSlipChange:this.onBetSlipChange,\n                    onBetSlipAdd:this.onBetSlipAdd\n                    }}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n};\nexport default Context;","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","import nextData from \"../data/nextToGo.json\";\nimport nextDataHome from \"../data/nexttogoHome.json\";\nimport meetingDetailsAll from \"../data/meetingDetailsAll.json\";\n\n// import todayRacing from \"../data/todayRacing.json\";\n// import todayRacingGrey from \"../data/todayRacingGrey.json\";\n// import todayRacingHarness from \"../data/todayRacingHarness.json\";\n\n\nimport raceDetailsResults1 from \"../data/raceDetailsResults1.json\";\nimport raceDetailsResults2 from \"../data/raceDetailsResults2.json\";\nimport raceDetailsResults3 from \"../data/raceDetailsResults3.json\";\nimport raceDetailsResults4 from \"../data/raceDetailsResults4.json\";\nimport raceDetailsResults5 from \"../data/raceDetailsResults5.json\";\nimport raceDetailsResults6 from \"../data/raceDetailsResults6.json\";\nimport raceDetailsResults7 from \"../data/raceDetailsResults7.json\";\nimport raceDetailsResults8 from \"../data/raceDetailsResults8.json\";\nimport raceDetailsResults9 from \"../data/raceDetailsResults9.json\";\nimport raceDetailsResults10 from \"../data/raceDetailsResults10.json\";\nimport raceDetailsResults11 from \"../data/raceDetailsResults11.json\";\nimport raceDetailsResults12 from \"../data/raceDetailsResults12.json\";\nimport meetingDetails from \"../data/meetingDetails.json\";\n\n\nimport winPlaceBet from \"../data/win_place_bet.json\";\n\n\nexport const fetchTodayRacing =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_TODAY_RACING',\n      payload: meetingDetailsAll\n    });\n  }\n};\n\nexport const fetchNextRace =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_NEXT_RACE',\n      payload: nextData\n    });\n  }\n};\nexport const fetchNextRaceHome =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_NEXT_RACE_HOME',\n      payload: nextDataHome\n    });\n  }\n};\nexport const fetchMeetingDetails =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_MEETING_DETAILS',\n      payload: meetingDetails\n    });\n  }\n};\nexport const fetchRaceDetails =  (props) => {\n  var data={}\n  switch(props) {\n    case 1:\n      data=raceDetailsResults1;\n      break;\n    case 2:\n      data=raceDetailsResults2;\n      break;\n    case 3:\n      data=raceDetailsResults3;\n      break;\n    case 4:\n      data=raceDetailsResults4;\n      break;\n    case 5:\n      data=raceDetailsResults5;\n      break;\n    case 6:\n      data=raceDetailsResults6;\n      break;   \n    case 7:\n      data=raceDetailsResults7;\n      break;\n    case 8:\n        data=raceDetailsResults8;\n        break;\n    case 9:\n        data=raceDetailsResults9;\n        break;\n    case 10:\n        data=raceDetailsResults10;\n        break;\n    case 11:\n        data=raceDetailsResults11;\n        break;\n    case 12:\n        data=raceDetailsResults12;\n        break;            \n    default:\n      data= null;\n      break;\n  };\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_RACE_DETAIL',\n      payload: data\n    })\n  }\n};\n\nexport const fetchPathParams =  (pathParam) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_PATH_PARAMS',\n      payload: pathParam\n    });\n  }\n};\n\nexport const fetchWinPlaceBet =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_WIN_PLACE_BET',\n      payload: winPlaceBet\n    });\n  }\n};\n\n\n\nexport const addBetSlipData =  (betSlipind) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'ADD_BET_SLIP_DATA',\n      payload: betSlipind\n    });\n  }\n};\n\nexport const remainingBetSlipData =  (remaining) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'REMAINING_BET_SLIP_DATA',\n      payload: remaining\n    });\n  }\n};\n\nexport const deleteBetSlipData =  (betSlipDelete) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'DELETE_BET_SLIP_DATA',\n      payload: betSlipDelete\n    });\n  }\n};\n\nexport const betSlipScreen =  (screen) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'BET_SLIP_SCREEN',\n      payload: screen\n    });\n  }\n};\n\nexport const countBetSlipData =  (count) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'COUNT_BET_SLIP_DATA',\n      payload: count\n    });\n  } \n};\nexport const postWinPlaceBets =  (betData) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'POST_WIN_PLACE',\n      payload: betData\n    });\n  }\n};\n\nexport const allBetSlipData =  (dataAll) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'ALL_BET_SLIP_DATA',\n      payload: dataAll\n    });\n  }\n};\n\n// export const deleteBetSlipData =  (betSlipind) => {\n//   return function (dispatch) {\n//     dispatch({\n//       type: 'DELETE_BET_SLIP_DATA',\n//       payload: betSlipind\n//     });\n//   }\n// };\n// export const deleteAllBetSlipData =  (betSlipind) => {\n//   return function (dispatch) {\n//     dispatch({\n//       type: 'DELETE_ALL_BET_SLIP_DATA',\n//       payload: betSlipind\n//     });\n//   }\n// };\n// export const fetchTodayGrey =  () => {\n//   return function (dispatch) {\n//     dispatch({\n//       type: 'FETCH_TODAY_GREY',\n//       payload: todayRacingGrey\n//     });\n//   }\n// };\n// export const fetchTodayHarness =  () => {\n//   return function (dispatch) {\n//     dispatch({\n//       type: 'FETCH_TODAY_HARNESS',\n//       payload: todayRacingHarness\n//     });\n//   }\n// };\n// async dispatch => {\n//   const response= await \"../data/todayRacingHarness.json\"\n//   dispatch({\n//       type:'FETCH_TODAY_HARNESS',\n//       payload:response\n//   })\n// };","import React from 'react';\nimport { Link} from \"react-router-dom\";\nimport { elastic as Menu } from 'react-burger-menu';\nimport \"./Menu.css\";\n\nconst MenuView=()=> {\n      function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    return (\n      <Menu className=\"icon-hamburger-menu\">\n        <Link exact to=\"/\" >\n        Home</Link>\n        <Link exact to=\"/next-to-go\" >\n        Next To Go</Link>\n        <Link exact to={`/${date}/R`}\n         >\n        Racing</Link>\n        <Link exact to={`/${date}/G`}\n         >\n        GreyHound</Link>\n        <Link exact to={`/${date}/H`} \n         >\n        Harness</Link>\n      </Menu>\n    );\n}\nexport default MenuView","import React from 'react'\nimport \"./Header.css\";\nimport \"./Resp_Header.css\"\nimport { Link} from \"react-router-dom\";\nimport MenuView from \"./Menu\";\nconst Header=() =>{\n    return (\n        <div>\n            <header className=\"page-header\">\n                <div className=\"content-wrapper\">\n                    <div className=\"positioned-left\">\n                        <div className=\"positioned-left\">\n                            <div className=\"toggle-menu-link\">\n                                <i className=\"icon-hamburger-menu\">\n                                    <MenuView/>\n                                </i>\n                                <span className=\"hamburger-title\">\n                                    <Link to=\"/\" className=\"title-main\">\n                                        <div id=\"vollie-tagline\">\n                                            Racing, Hub\n                                        </div>\n                                    </Link>\n                                    \n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n    )\n}\nexport default Header;\n","import React,{ useState,useEffect,useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport MediaQuery from 'react-responsive'\n\n\nimport { allBetSlipData } from \"../../actions\";\n\n// import BetSlipStore from \"../../context/BetSlipContext\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n      },\n  }));\nconst NextRace = (props)=>{\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    const classes = useStyles();\n    const [nextRace,setnextRace]=useState([]);\n    const [nextRaceGrey,setnextRaceGrey]=useState([]);\n    const [nextRaceHarness,setnextRaceHarness]=useState([]);\n    const [Race,setRace]=useState(true);\n    const [Grey,setGrey]=useState(true);\n    const [Harness,setHarness]=useState(true);\n\n    const [firstTime, setfirstTime] = useState();\n    const [firstNumber, setfirstNumber] = useState();\n    const [fetched, setfetched] = useState(false)\n    useEffect(() => {\n        if (props.next.length>0){\n            {props.next[0].raceStartTime?setfirstTime(props.next[0].raceStartTime):setfirstTime()}\n            {props.next[0].raceNumber?setfirstNumber(props.next[0].raceNumber):setfirstNumber()}\n            setfetched(true)\n        }\n    }, [props.next]);\n\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     );\n  \n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n\n    const fetchResources=()=>{\n        {props.next.map(item =>{\n            switch(item.meeting.raceType) {\n                case 'R' :\n                    setnextRace(oldArray => [...oldArray, item]);\n                    break\n                case 'G' :\n                    setnextRaceGrey(oldArray => [...oldArray, item]);\n                    break\n                default:\n                    setnextRaceHarness(oldArray => [...oldArray, item]);\n                    break        \n                };\n        })}\n    };\n    useEffect(()=> {\n        fetchResources(props.next);\n    },[props.next]);\n\n    const duration=(raceStartTime)=>{ \n        var left=(Date.now()-new Date(raceStartTime))\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes==0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes==0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n        if (hours==0 && minutes>=5){\n            if (left>0){\n                return (-minutes+'m')\n            }\n            else return(minutes+'m')\n        } \n        if (hours==0 && (minutes<=5||minutes>=-5) \n            && (minutes>0||minutes<0)) {\n                if (left>0) {\n                    if (seconds==0){\n                        return(-minutes+'m')\n                    } else return (-minutes+'m'+seconds+'s')\n                }\n               else {\n                if (seconds==0){\n                    return(minutes+'m')\n                } else return (minutes+'m'+seconds+'s')\n                }\n        }  \n        if (hours==0 && minutes==0) {\n            if (left>0) {\n                return(-seconds+'s')\n            }\n            else return((seconds+'s'))\n        } \n    };\n    \n    const renderTodayTableList=(state,title) =>{\n        return (        \n           (state.map(item => {\n                return(\n                    <>\n                        <MediaQuery query='(min-width: 800px)'>\n                            <Grid item xs ={4} className=\"next-section\">\n                                \n                                \n                                <Link className={classes.paper}  className={\n                                    (item.raceStartTime==props.firstTime\n                                        &&item.raceNumber==props.firstNumber)?\n                            \"next-item-first\":\"next-item\"}\n                                    to={{\n                                        pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`,\n                                        slot:item.raceNumber, \n                                        place: item.meeting.meetingName,\n                                        code:item.meeting.venueMnemonic,\n                                        raceType:item.meeting.raceType   \n                                        \n                                    }}>                        \n                                    <p>R{item.raceNumber}</p>\n                                    <time>{duration(item.raceStartTime)}</time>    \n                                    <p>{item.meeting.meetingName} ({item.meeting.location})</p>\n                                </Link> \n                            </Grid>\n                        </MediaQuery>  \n                        <MediaQuery query='(max-width: 800px)'>\n                            <Grid item xs ={6} className=\"next-section\">\n                                <Link className={classes.paper}  className={\n                                    (item.raceStartTime==firstTime\n                                        &&item.raceNumber==firstNumber)?\n                            \"next-item-first\":\"next-item\"}\n                                    to={{\n                                        pathname:`/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`,\n                                        slot:item.raceNumber, \n                                        place: item.meeting.meetingName,\n                                        code:item.meeting.venueMnemonic,\n                                        raceType:item.meeting.raceType   \n                                    }}>                        \n                                    <p>R{item.raceNumber}</p>\n                                    <time>{duration(item.raceStartTime)}</time>    \n                                    <p>{item.meeting.meetingName} ({item.meeting.location})</p>\n                                </Link> \n                            </Grid>\n                        </MediaQuery>  \n                    </>                \n            )}\n        ))\n        );\n    };\n    return(\n        <div>\n            <div className=\"next-data\">\n                <h1 onClick={()=>setRace(!Race)}>Racing</h1>\n                <Grid container spacing={3}>\n                    {Race?renderTodayTableList(nextRace.slice(0,6)):\"\"}\n                </Grid>\n                <h1 onClick={()=>setGrey(!Grey)}>GreyHound</h1>\n                <Grid container spacing={3}>\n                    {Grey?renderTodayTableList(nextRaceGrey.slice(0,6)):\"\"}\n                </Grid>\n                <h1 onClick={()=>setHarness(!Harness)}>Harness</h1>\n                <Grid container spacing={3}>\n                    {Harness?renderTodayTableList(nextRaceHarness.slice(0,6)):\"\"}\n                </Grid>\n            </div>\n        </div>\n        );\n}; \n\n\nexport default NextRace","import React,{ useState,useEffect,useRef } from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport \"./NextRace.css\";\n\nimport BetSlipStore from \"../../context/BetSlipContext\";\n\nconst NextList = (props)=>{\n  // console.log(props.next)\n      function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     );\n  \n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n\n\n\n    const duration=(raceStartTime)=>{\n        var left=(Date.now()-new Date(raceStartTime))\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60); \n        if (hours==0 && (minutes>0||minutes<0)){\n            if (left>0) {\n                if (seconds==0){\n                    return(-minutes+'m')\n                } else return (-minutes+'m'+seconds+'s')\n            }\n           else {\n            if (seconds==0){\n                return(minutes+'m')\n            } else return (minutes+'m'+seconds+'s')\n            }\n        }\n        if (hours==0 && minutes==0) {\n            if (left>0){\n                return(-seconds+'s')\n            }\n            return (seconds+'s')\n        }\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes==0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes==0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n    };\n\n\n    const renderToday=(()=>{\n        return (        \n            (props.next.map(item => {\n                                //  console.log(item)\n                                //    console.log(item.raceNumber)\n                                //    console.log(item.meeting.meetingName)\n                                //    console.log(item.meeting.venueMnemonic)\n                                //    console.log(item.meeting.raceType)\n\n                 return(\n                     <div className=\"next-to-go-bar-race\">\n                        <Link className=\"next-to-go-bar-race-link\" \n                        to={{\n                            pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`,\n                            slot:item.raceNumber, \n                            place: item.meeting.meetingName,\n                            code:item.meeting.venueMnemonic,\n                            raceType:item.meeting.raceType                            \n                        }}>\n                            <div className=\"next-to-go-bar-race-info\">\n                                <span className=\"next-to-go-bar-race-name\">\n                                    {item.meeting.meetingName} ({item.meeting.location}) - R{item.raceNumber}\n                                </span>\n                            </div>\n                            <time className=\n                            {(Date.now()-new Date(item.raceStartTime)>-5*60000)?\n                                \"next-to-go-bar-race-close-to-start\":\n                                \"next-to-go-bar-time-to-start\"}>\n                                {duration(item.raceStartTime)}\n                            </time>      \n                        </Link>\n                     </div>\n                )})\n         ));\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n          width: '100%',\n          backgroundColor: theme.palette.background.paper,\n        },\n      }));\n    \n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const TabPanel=(props)=> {\n        const { children, value, index, ...other } = props;\n      \n        return (\n          <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n          >\n            {value === index && (\n              <Box p={3}>\n                <Typography>{children}</Typography>\n              </Box>\n            )}\n          </div>\n        );\n      }\n      \n      TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n      };\n      \n      function a11yProps(index) {\n        return {\n          id: `scrollable-auto-tab-${index}`,\n          'aria-controls': `scrollable-auto-tabpanel-${index}`,\n        };\n      }\n      \n\n\n\n    return(\n        <div>\n            <div className=\"next-to-go-bar-race-list\">\n                <div className={classes.root}>\n                    <AppBar position=\"static\" color=\"default\">\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                        aria-label=\"scrollable auto tabs example\"\n                        >\n                            {props.next?renderToday(props):\"\"}\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </div>\n        </div>\n        \n        );\n}; \nexport default NextList\n\n\n","import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport _, { isInteger, indexOf } from \"lodash\"\nimport \"./BetSlip.css\"\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\n\nimport { \n    addBetSlipData,\n    allBetSlipData,\n    deleteBetSlipData,\n    remainingBetSlipData,\n    betSlipScreen,\n    postWinPlaceBets\n} from \"../../actions\";\nimport { toInteger } from 'lodash';\n\n\n\nconst BetSlipHome=(props) =>{\n    const [poolFinalList, setpoolFinalList] = useState([]);\n    // const [moneyValue, setmmoneyValue] = useState(null);\n\n    const [totalAmount, settotalAmount] = useState(0)\n    const [poolStatus, setpoolStatus] = useState()\n    const [betAllData, setbetAllData] = useState();\n    const [deletedBets, setdeletedBets] = useState([]);\n    const [deleteOn, setdeleteOn] = useState(false)\n    const [RemainingBets, setRemainingBets] = useState();\n    const [finalRemainingBets, setfinalRemainingBets] = useState([]);\n    const [placeWinPlaceBetList, setplaceWinPlaceBetList] = useState([])\n\n    const [distinctPoolfh, setdistinctPoolfh] = useState();\n    const [runnerList, setrunnerList] = useState();\n    const [showCurrency, setshowCurrency] = useState(false)\n    const [BetSlipDoneJson, setBetSlipDoneJson] = useState();\n    const [BetSlipPendingJson, setBetSlipPendingJson] = useState([]);\n    const [BetSlipSingle, setBetSlipSingle] = useState();\n    const [fetched, setfetched] = useState(false);\n    const [fetchedSingle, setfetchedSingle] = useState(false);\n\n    const [deleted,setdeleted]=useState(false)\n    const [startSlip, setstartSlip] = useState(false)\n    const [BetSlipSingleSubmitted, setBetSlipSubmitted] = useState();\n    const [betDone, setbetDone] = useState(false);\n\n    const [WinMoney, setWinMoney] = useState(null);\n    const [PlaceMoney, setPlaceMoney] = useState(null);\n    const [ManualPlace, setManualPlace] = useState(0);\n    const [ManualWin, setManualWin] = useState(0);\n    const [typeBet, settypeBet] = useState('');\n    console.log(props.postWinPlace)\n    useEffect(() => {\n\n        props.postWinPlaceBets([])\n        \n        var users=props.allBetSlip;\n        \n        var rem=props.remainingBetSlip   \n        if(props.screenStatus) {\n            users = [users, ...rem];\n        } else {users=[...rem]}\n        \n        var dele=[];\n        if(props.remainingBetSlip) {\n            users=Object.values(users)\n        }\n\n        let grouped = _.reduce(users, (result, user) => {\n            if(user){\n                    (result[user.name] || (result[user.name] = [])).push(user);  \n                    return result;\n            }    \n        }, {});\n        var poolList=[]\n        if(grouped) {\n            if(Object.keys(grouped)){\n                Object.keys(grouped).map(poolname=>{\n                    if(poolname!=\"undefined\") {\n                        let groupedRunners = _.reduce(grouped[poolname], (result, user) => {\n                            if(user){\n                                    (result[user.name] || (result[user.name] = [])).push(user.runners);  \n                                    \n                                    return (Object.values(result).reduce(\n                                        function(accumulator, currentValue) {\n                                          return accumulator.concat(currentValue)\n                                        },\n                                        []\n                                      ));        \n                            }    \n                        }, {});\n                        let groupedRunnersNo=groupedRunners.reduce(function (allNames, name) { \n                            if (name in allNames) {\n                              allNames[name]++\n                            }\n                            else {\n                              allNames[name] = 1\n                            }\n                            return(allNames)\n                          }, {})\n                        var itemList=[];\n                        var winList=null;\n                        var placeList=null;\n                        for (var i=0;i<Object.keys(groupedRunnersNo).length;i=i+1){\n                            if(Object.values(groupedRunnersNo)[i]%2!=0) {\n                                if(isInteger(parseInt(Object.keys(groupedRunnersNo)[i]))) {\n                                    var pos=(_.findIndex(users, {runners: parseInt(Object.keys(groupedRunnersNo)[i])}));      \n                                    itemList.push(users[pos].runners)\n                                    winList=grouped[poolname][grouped[poolname].length-1].win\n                                    placeList=grouped[poolname][grouped[poolname].length-1].place\n                                } \n                            }\n                            }\n                        if (itemList.length){\n                            var itemPool={\"name\":poolname,\"runners\":itemList, \"win\": winList ,\"place\": placeList}\n                        }\n                        if(poolFinalList){\n                            poolList.push(itemPool)\n                        } else {\n                            poolList=itemPool\n                        }\n                    }     \n                })\n                setRemainingBets(poolList)\n                setstartSlip(true)\n            }\n        };\n    }, [props.allBetSlip]);\n\n\n\n    \n    const deleteSingleBet=(item)=>{\n        if (RemainingBets.length==1){\n            setstartSlip(false)\n            setRemainingBets([])\n        }\n        var obje=RemainingBets.filter(e1=> { return e1 != item })\n        setRemainingBets(obje)\n        if(item.runners.length>1) {\n            item.runners.map(runnnerInd=>{\n                setdeletedBets(oldArray => [...oldArray, {\"name\":item.name,\"runners\":parseInt(runnnerInd),\"win\": item.win ,\"place\": item.place}]); \n            })\n        } else {\n            setdeletedBets(oldArray => [...oldArray, {\"name\":item.name,\"runners\":parseInt(item.runners),\"win\": item.win ,\"place\": item.place}]);\n        }\n    };\n\n    const handleDeleteAll=()=>{\n        if (RemainingBets.length==1){\n            setstartSlip(false)\n            setRemainingBets()\n        }\n        RemainingBets.map(items=>{\n            if(items) {\n                if(items.runners.length>1) {\n                    items.runners.map(runnnerInd=>{\n                        setdeletedBets(oldArray => [...oldArray, \n                            {\"name\":items.name,\"runners\":runnnerInd,\n                            \"win\": items.win ,\"place\": items.place}]);\n                    })\n                } else setdeletedBets(oldArray => [...oldArray, items]);   \n            }\n         })\n        setRemainingBets([])\n        setshowCurrency(false);\n    };\n\n    useEffect(() => {\n        if (RemainingBets) {\n            setfinalRemainingBets([])\n            RemainingBets.map(items=>{\n                if(items) {\n                    if(items.runners.length>1) {\n                        items.runners.map(runnnerInd=>{\n                            setfinalRemainingBets(oldArray => [...oldArray, \n                                {\"name\":items.name,\"runners\":runnnerInd,\n                                \"win\": items.win ,\"place\": items.place}]);\n                        })\n                    } \n                    else \n                    {   \n                        setfinalRemainingBets(oldArray => [...oldArray,\n                            {\"name\":items.name,\"runners\":items.runners[0],\n                            \"win\": items.win ,\"place\": items.place}])\n                    }\n                }\n            })\n        }\n\n    }, [RemainingBets]);\n    useEffect(() => {\n        if (finalRemainingBets) {\n            setplaceWinPlaceBetList([])\n            finalRemainingBets.map(items=>{\n                if(items) {\n                    if( items.win>0)  {\n                        setplaceWinPlaceBetList(oldArray => [...oldArray,\n                            {\n                                \"bet_fh\": \"tk_integ_\"+Date.now()+\"_\"+items.name,\n                                \"bet_pool_fh\": items.name+'w',\n                                \"stake_cents\": items.win,\n                                \"combinations\":[\n                                {\n                                \"place\":1,\n                                \"runners\":[items.runners]\n                                }\n                                ]\n                            }                          \n                        ])\n                        \n                    }\n                    if( items.place>0)  {\n                        setplaceWinPlaceBetList(oldArray => [...oldArray,\n                            {\n                                \"bet_fh\": \"tk_integ_\"+Date.now()+\"_\"+items.name,\n                                \"bet_pool_fh\": items.name+\"p\",\n                                \"stake_cents\": items.place,\n                                \"combinations\":[\n                                {\n                                \"place\":2,\n                                \"runners\":[items.runners]\n                                }\n                                ]\n                            }                           \n                        ])\n                    }\n\n                }\n            })\n        }\n    }, [finalRemainingBets]);\n    useEffect(() => {\n        props.remainingBetSlipData(finalRemainingBets)\n    }, [finalRemainingBets]);\n    useEffect(() => {\n        props.deleteBetSlipData(deletedBets)\n    }, [deletedBets]);\n    \n    const betSlipHeader=()=>{\n        return(\n            <SimpleBar style={{ maxHeight: '100vh' }}>\n            <header className=\"side-panel-title-bar\">\n                <toggle-button className=\"betslip-toggle\">\n                    <div className=\"toggle-button-grouped\">\n                        <button className=\"toggle-button selected\">\n                            Bet Slip\n                        </button>\n                        <button className=\"toggle-button\">\n                            Pending Bets\n                        </button>\n                    </div>\n                </toggle-button>\n            </header>\n            </SimpleBar>\n        )\n    };\n\n\n    const betSlipPlaceInput=(item)=>{\n        var pos=(_.findIndex(RemainingBets, item));\n        const updateFieldChanged = (e,item) => {\n            e.preventDefault();\n            var pos=(_.findIndex(RemainingBets, item))\n            let newArr = [...RemainingBets]; \n            newArr[pos][e.target.name] = parseInt(e.target.value); \n            newArr[pos][e.target.name]=newArr[pos][e.target.name]\n            setRemainingBets(newArr); \n        }\n        return(\n            <>\n                <form className=\"common-form bet-card-form ng-valid ng-dirty ng-valid-parse\">\n                    <ul className=\"\">\n                        <li className=\"\">\n                            <div className=\"bet-card-info\">\n                                <label className=\"bet-info-value\">\n                                    Win\n                                </label>\n                                <div className=\"bet-card-input\">\n                                    <stake-input className=\"\">\n                                        <span className=\"stake-input\">\n                                            <span className=\"currency\">\n                                                $\n                                            </span>\n                                            <input \n                                                type=\"number\"\n                                                onClick={()=>{\n                                                    settypeBet('Win')\n                                                }} \n                                                key={RemainingBets[pos]['name']+'win'}\n                                                name='win'\n                                                placeholder={null}\n                                                value={RemainingBets[pos]['win']}\n                                                min={0}\n                                                onChange={(e)=>updateFieldChanged(e,item)} \n                                                className=\"common-textfield ng-valid stake-input-has-focus ng-touched ng-not-empty ng-dirty ng-valid-parse\">\n                                            </input>\n                                        </span>\n                                    </stake-input>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"\">\n                            <div className=\"bet-card-info\">\n                                <label className=\"bet-info-value\">\n                                    Place\n                                </label>\n                                <div className=\"bet-card-input\">\n                                    <stake-input className=\"\">\n                                        <span className=\"stake-input\">\n                                            <span className=\"currency\">\n                                                $\n                                            </span>\n                                            <input \n                                                type=\"number\"\n                                                onClick={()=>{\n                                                    settypeBet('Place')\n                                                }}\n                                                name='place'\n                                                placeholder={null}\n                                                key={RemainingBets[pos]['name']+'place'}\n                                                onChange={(e)=>updateFieldChanged(e,item)} \n                                                value={RemainingBets[pos]['place']}\n                                                min={0}\n                                                className=\"common-textfield ng-valid stake-input-has-focus ng-touched ng-not-empty ng-dirty ng-valid-parse\">\n                                            </input>\n                                        </span>\n                                    </stake-input>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"\">\n                            <div className=\"bet-card-info\">\n                                <bet-cost className=\"\">\n                                    <label className=\"bet-info-label\">\n                                        Bet Cost\n                                    </label>\n                                    <span className=\"bet-info-value\">\n                                        ${(isNaN(RemainingBets[pos]['win'])&&isNaN(RemainingBets[pos]['place']))?0:\n                                        isNaN(RemainingBets[pos]['win'])?item.runners.length*(RemainingBets[pos]['place']):\n                                        isNaN(RemainingBets[pos]['place'])?item.runners.length*(RemainingBets[pos]['win']):\n                                        item.runners.length*(RemainingBets[pos]['win']+RemainingBets[pos]['place'])}\n                                    </span>\n                                </bet-cost>\n                            </div>\n                        </li>\n                    </ul>\n                </form>\n            </>\n        )\n    };\n    const betSlipBetDetail =(WinMoney)=>{\n        return(\n            <>\n            {RemainingBets?(startSlip)?RemainingBets.map(item=>{\n                return(\n                    item?item.name?\n                        <div className=\"card\">\n                        <div className=\"\">\n                            <parimutuel className=\"\">\n                                <section className=\"bet-card\">\n                                    <header className=\"bet-card-header\">\n                                        <h1 className=\"bet-card-title\">\n                                            Win/Place\n                                        </h1>\n                                        <span className=\"bet-card-type tote\">\n                                            TOTE\n                                        </span>\n                                    </header>\n                                    <div className=\"bet-card-body\">\n                                        <div className=\"bet-additional-info\">\n                                            <ul className=\"bet-card-race-information\">\n                                                <li>\n                                                    {item.name} \n                                                </li>\n                                            </ul>\n                                            <ul className=\"bet-card-selections\">\n                                                <li>\n                                                    <p className=\"bet-card-label\">\n                                                        Selections\n                                                    </p>\n                                                    <span className=\"bet-card-selection\">\n                                                        {item.runners.map(no=>{\n                                                            return(\n                                                                <>\n                                                                <span>\n                                                                    {no}\n                                                                </span>\n                                                                <span className=\"runner-seperator\">\n                                                                    {\" , \"}\n                                                                </span>\n                                                                </>\n                                                            )\n                                                        })}\n                                                    </span>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        {betSlipPlaceInput(item)}\n                                    </div>\n                                    <footer className=\"bet-card-footer\">\n                                        <div className=\"bet-card-footer-actions\">\n                                            <button className=\"bet-card-remove\">\n                                                <i onClick={()=>{deleteSingleBet(item)\n                                                            setdeleted(true)\n                                                            setshowCurrency(false)}}\n                                                className=\"icon-remove\" style={{height:'5rem'}}>\n                                                    <RiDeleteBin6Line/>\n                                                </i>\n                                            </button>\n                                        </div>\n                                    </footer>\n                                </section>\n                            </parimutuel>\n                        </div>\n                    </div>\n                    :\"\":\"\"\n                )\n            })\n        :\"\":\"\"}\n        </>\n        )\n    }\n    const currencyOpen=(WinMoney,PlaceMoney,BetSlipDoneJson,typeBet,ManualPlace,ManualWin)=>{\n        return(\n            <div className=\"bet-builder-actions-wrapper\">\n                <footer className=\"bet-builder-footer\">\n                    <ul className=\"summary-list\">\n                        <li className=\"\">\n                            <h1 className=\"\">\n                                Number of bets\n                            </h1>\n                            <p className=\"bet-builder-footer-key-info\">\n                                <span className=\"bet-summary-info\">\n                                    Single\n                                </span>\n                            </p>\n                        </li>\n                        <li  className=\"\">\n                            <h1  className=\"\">\n                                Total cost\n                            </h1>\n                            <p  className=\"bet-builder-footer-key-info bet-builder-total-bets-cost\">\n                            ${_.sumBy(finalRemainingBets, 'win')+_.sumBy(finalRemainingBets, 'place')}\n                            </p>\n                        </li>\n                    </ul>\n                    <menu  className=\"bet-summary-menu\">\n                        <button  onClick={()=>{\n                            handleDeleteAll()\n                        }\n                        }\n                        className=\"bet-builder-button common-button change-bet-button builder-bet-clear-all\">\n                            Delete All\n                        </button>\n                        <button  onClick={()=>{\n                            props.postWinPlaceBets(placeWinPlaceBetList)\n                            // if(props.postWinPlace.length>0) {\n                            //     setRemainingBets([])\n                            // }\n                            \n                        }}\n                        className=\"bet-builder-button common-button submit-bet-button bet-builder-bet-now-button\">\n                            Bet Now\n                        </button>\n                    </menu>\n                </footer>\n            </div>\n        )\n    };\n    return (\n        <div className=\"side-panel toggleable\">\n            <div className=\"inner-side-panel pane loaded\">\n                {betSlipHeader()}\n                <div className=\"bet-builder bet-builder-has-bet\">\n                    <div className=\"bet-builder-state build\">\n                        <div className=\"inner-bet-builder-state\">\n                            <div className={showCurrency?\"side-panel-messages-wrapper\":\"side-panel-messages-wrapper-closed\"}>\n                                <div className=\"bet-builder-bet-slip\">\n                                    <div className=\"bet-cards-wrapper\">\n                                        {betSlipBetDetail(WinMoney, PlaceMoney,BetSlipDoneJson)}\n                                    </div>\n                                </div>\n                            </div>\n                            {currencyOpen(WinMoney, PlaceMoney,BetSlipDoneJson,typeBet)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps=(state)=> {\n    return{ \n        betSlipInd:state.betSlipInd,\n        allBetSlip:state.allBetSlip,\n        deleteBetSlip:state.deleteBetSlip,\n        remainingBetSlip:state.remainingBetSlip,\n        screenStatus:state.screenStatus,\n        postWinPlace:state.postWinPlace\n    }\n}\nexport default connect(mapStateToProps, \n    { \n        addBetSlipData,\n        allBetSlipData,\n        deleteBetSlipData,\n        remainingBetSlipData,\n        betSlipScreen,\n        postWinPlaceBets\n    })\n    (BetSlipHome);\n","import React from 'react'\nimport \"./Resp_Header.css\";\nimport { Link} from \"react-router-dom\";\n\n\nconst RespHeader=() =>{\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    return (\n        <header className=\"flex flex-vertical-center flex-space-between\">\n            <div id=\"site-heading\">\n                <Link to=\"/\" className=\"title-main\">\n                    <div id=\"vollie-tagline\">\n                        Racing, Hub\n                    </div>\n                </Link>\n            </div>\n            <nav id=\"header-menu\">\n                <ul className=\"top-menu\">\n                    <li className=\"yump-magic-hover\">\n                        <Link to=\"/\" className=\"menu-item-link\">\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to=\"/next-to-go\" className=\"menu-item-link\">\n                            Next To Go\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to={`/${date}/R`} className=\"menu-item-link\">\n                            Racing\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to={`/${date}/G`} className=\"menu-item-link\">\n                        GreyHound\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to={`/${date}/H`} className=\"menu-item-link\">\n                        Harness\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\nexport default RespHeader;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace,allBetSlipData,betSlipScreen } from \"../../actions\";\n\nimport Header from '../Nav/Header';\nimport NextRace from '../Next/NextRace';\nimport NextList from '../Next/NextList';\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\nimport \"../Next/NextRace.css\"\nconst NextScreen=(props) =>{\n    // console.log(props)\n    props.fetchNextRace();\n    props.betSlipScreen(false)\n    const [firstTime, setfirstTime] = useState();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(() => {\n        if (props.next.length>0){\n            {props.next[0].raceStartTime?setfirstTime(Date.now()-new Date(props.next[0].raceStartTime)):setfirstTime()}\n        }\n    }, [props.next]);\n    useEffect(\n        () => {\n          timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n          return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n        },\n        [showLoading]\n      );\n   \n      setTimeout(()=>{\n         setShowLoading(false)\n         return () => {\n             clearInterval(timerToClearSomewhere.current)\n           }\n      },firstTime);\n    return (\n            <>\n                <MediaQuery query='(min-width: 800px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n                    <ui-view>\n                        <RespHeader/>\n                        <NextList next={props.next}/>\n                        <main className=\"page-content\">\n                            <div className=\"left-column\">\n                                <ui-view>  \n                                    <nav className=\"menuItems\">\n                                        <NextRace next={props.next}/>\n                                    </nav>\n                                </ui-view>\n                            </div>\n                            <BetSlipHome/>\n                        </main>\n                    </ui-view>  \n                    </SimpleBar>        \n                </MediaQuery>\n                <MediaQuery query='(max-width: 800px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n                    <Header/>\n                    <main className=\"page-items\">\n                        <NextList next={props.next}/>\n                        <NextRace next={props.next}/>\n                    </main>\n                    </SimpleBar>\n                </MediaQuery>\n            </>\n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n        next:state.next,\n        screenStatus:state.screenStatus,\n    }\n}\nexport default connect(mapStateToProps, { \n    fetchNextRace,\n    betSlipScreen\n } )(NextScreen);","import React,{useState} from 'react';\nimport \"./TodayDetails.css\";\nimport { Link} from \"react-router-dom\";\n\n\nimport BetSlipStore from \"../../context/BetSlipContext\";\n\nconst TodayRacingDetails=(props)=> {\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    const duration=(raceStartTime)=>{ \n        var left=(Date.now()-new Date(raceStartTime))\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes==0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes==0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n        if (hours==0 && minutes>=5){\n            if (left>0){\n                return (-minutes+'m')\n            }\n            else return(minutes+'m')\n        } \n        if (hours==0 && (minutes<=5||minutes>=-5) \n            && (minutes>0||minutes<0)) {\n                if (left>0) {\n                    if (seconds==0){\n                        return(-minutes+'m')\n                    } else return (-minutes+'m'+seconds+'s')\n                }\n               else {\n                if (seconds==0){\n                    return(minutes+'m')\n                } else return (minutes+'m'+seconds+'s')\n                }\n        }  \n        if (hours==0 && minutes==0) {\n            if (left>0) {\n                return(-seconds+'s')\n            }\n            else return((seconds+'s'))\n        } \n    };\n    const startTime=(st)=>{\n        var current=new Date(st)\n        if (current.getMinutes()<9) {\n         return (current.getHours()+\":0\"+current.getMinutes())\n        }\n        else return (current.getHours()+\":\"+current.getMinutes())\n    }\n    const racingSlots=()=>{ return (\n            (props.todayRacing.map(item => {{ \n                    return(\n                        <div className=\"table-item-row\">\n                            {item.races.map(items=>{\n                                console.log(items,item)\n                                return( \n                                    <Link to={{\n                                        pathname:`/${date}/${item.meetingName}/${item.venueMnemonic}/${item.raceType}/${items.raceNumber}/Win`,\n                                        slot:items.raceNumber, \n                                        place: item.meetingName,\n                                        code:item.venueMnemonic,\n                                        raceType:item.raceType   \n                                }} \n                                    className='table-rem-row'>\n                                        <div className='table-rem-row'\n                                            id={item.Location}>\n                                            <div \n                                            className={(items.raceStatus!='Normal')?'table-item':\n                                            (-(Date.now()-new Date(items.raceStartTime))<60000\n                                            &&\n                                            -(Date.now()-new Date(items.raceStartTime))>-60000)?\n                                                \"table-item-open-color\":\n                                            'table-item-open'}>\n                                                <p className=\"table-item-slot\">R{items.raceNumber}</p>\n                                                <p className=\"table-item-time\">\n                                                    {startTime(items.raceStartTime)}   \n                                                </p>\n                                                <p className=\"table-item-results\">\n                                                    {Array.isArray(items.results) ?items.results.length>0?items.results.map(result=>{\n                                                        return(\n                                                            <>{result+\" \"}\n                                                            </>\n                                                        )\n                                                    }):duration(items.raceStartTime):duration(items.raceStartTime)}\n                                                </p>\n                                            </div>\n                                        </div>  \n                                    </Link>\n                                )\n                            })}\n                        </div>\n                    )\n                // }          \n    }})))};\n    const renderTodayRacingDetail=(()=>{\n        return (   \n            <div class=\"table\">\n                <div className=\"places-list\">\n                    {props.todayRacing.map(item=>{\n                        return(\n                            <div className=\"places-list-item\">\n                                <p>{item.meetingName}</p>\n                            </div>\n                        )\n                    })}\n                </div>\n                <div className=\"today-list\">\n                    {racingSlots()}\n                </div>\n            </div>\n         );\n    });\n    return (\n        <div>\n            {renderTodayRacingDetail()}\n        </div>\n    )\n};\nexport default TodayRacingDetails;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport { Link} from \"react-router-dom\";\nimport { fetchNextRace,\n    fetchTodayRacing} from \"../../actions\";\nimport \"./TodayDetails.css\"\nimport TodayRacingDetails from  \"./TodayRacingDetails\";\n\nconst TodayDetails = (props,ownProps)=>{\n    // console.log(props)\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    const [todayData, settodayData] = useState([])\n    useEffect(() => {\n        console.log(props)\n        if(props.todayRacing) {\n            var newArray=props.todayRacing.filter(function (el) {\n                return el.raceType ==props.detail\n              });\n            console.log(newArray)\n            settodayData(newArray)\n        }\n\n        \n    }, [props])\n    props.fetchNextRace();\n    useEffect(() => {\n        console.log(todayData)\n    }, [todayData])\n    \n    const [fetchToday,setfetchToday]=useState(props.detail)\n    const fetchTodayRaceInfo=(fetchToday)=> {\n        props.fetchTodayRacing(fetchToday);\n    }\n    useEffect(() => {\n        {fetchTodayRaceInfo(fetchToday)}; // this will fire on every change :(\n    }, [fetchToday]);\n\n    \n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n\n\n    const racingInfo=(props)=>{\n        return(\n            <TodayRacingDetails todayRacing={props}/>\n        )\n    }\n    return(\n        <div>\n            <div className=\"today-details\">\n                <div className=\"date-button\">\n                    <div className=\"category-bar\">\n                        <div className=\"button-bar\">\n                            <Link to={`/${date}/R`} className=\"category-button\">\n                                Racing\n                            </Link>\n                            <Link to={`/${date}/G`} className=\"category-button\">\n                                GreyHound\n                            </Link>\n                            <Link to={`/${date}/H`} className=\"category-button\">\n                                Harness\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {racingInfo(todayData)}\n                </div>\n            </div>\n        </div>\n        );\n}; \n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n        next:state.next,\n        todayRacing:state.todayRacing,\n        detail:ownProps.detail\n    }\n}\nexport default connect(mapStateToProps, { \n    fetchNextRace,fetchTodayRacing} \n    )(TodayDetails);","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace,allBetSlipData,betSlipScreen } from \"../../actions\";\n\nimport Header from '../Nav/Header'\nimport TodayDetails from '../Today/TodayDetails'\nimport NextList from '../Next/NextList'\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\n\nconst TodayR=(props)=> {\n    props.fetchNextRace();\n    props.betSlipScreen(false)\n    // useEffect(() => {\n    //   props.allBetSlipData([])\n    // }, [props.next])\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n        })\n    return (\n        <>\n          <MediaQuery query='(min-width: 800px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n            <ui-view>\n                <RespHeader/>\n                <NextList next={props.next}/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                              <TodayDetails detail='R'/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>        \n            </SimpleBar> \n          </MediaQuery>\n          <MediaQuery query='(max-width: 800px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n              <Header/>\n              <NextList next={props.next}/>\n              <TodayDetails detail='R'/>\n              </SimpleBar>\n          </MediaQuery>\n      </> \n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n      next:state.next,\n      allBetSlip:state.allBetSlip,\n      screenStatus:state.screenStatus,\n    }\n}\nexport default connect(mapStateToProps, { \n  fetchNextRace,\n  allBetSlipData,\n  betSlipScreen\n} )(TodayR);\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport { fetchNextRace,allBetSlipData,betSlipScreen } from \"../../actions\";\n\n\nimport Header from '../Nav/Header'\nimport TodayDetails from '../Today/TodayDetails'\nimport NextList from '../Next/NextList'\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\n\nconst TodayG=(props)=> {\n    props.fetchNextRace();\n    props.betSlipScreen(false)\n    // useEffect(() => {\n    //   props.allBetSlipData([])\n    // }, [props.next])\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n        })\n    return (\n        <>\n          <MediaQuery query='(min-width: 800px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n            <ui-view>\n                <RespHeader/>\n                <NextList next={props.next}/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                              <TodayDetails detail='G'/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>    \n            </SimpleBar>     \n          </MediaQuery>\n          <MediaQuery query='(max-width: 800px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <Header/>\n              <NextList next={props.next}/>\n              <TodayDetails detail='G'/>\n              </SimpleBar>\n          </MediaQuery>\n        </>\n    );\n}\nconst mapStateToProps=(state)=> {\n    return{\n      next:state.next,\n      allBetSlip:state.allBetSlip,\n      screenStatus:state.screenStatus,\n    }\n}\nexport default connect(mapStateToProps, { \n  fetchNextRace,\n  allBetSlipData,\n  betSlipScreen\n } )(TodayG);\n// export default TodayG;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace,allBetSlipData,betSlipScreen } from \"../../actions\";\n\n\nimport Header from '../Nav/Header'\nimport TodayDetails from '../Today/TodayDetails'\nimport NextList from '../Next/NextList'\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\n\nconst TodayH=(props)=> {\n    props.fetchNextRace();\n    props.betSlipScreen(false);\n \n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n        })\n    return (\n      <>\n          <MediaQuery query='(min-width: 800px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n            <ui-view>\n                <RespHeader/>\n                <NextList next={props.next}/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                              <TodayDetails detail='H'/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>   \n            </SimpleBar>      \n          </MediaQuery>\n          <MediaQuery query='(max-width: 800px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n              <Header/>\n              <NextList next={props.next}/>\n              <TodayDetails detail='H'/>\n              </SimpleBar>\n          </MediaQuery>\n      </> \n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n      next:state.next,\n      allBetSlip:state.allBetSlip,\n      screenStatus:state.screenStatus,\n    }\n}\nexport default connect(mapStateToProps, { \n  fetchNextRace,\n  allBetSlipData,\n  betSlipScreen\n } )(TodayH);\n// export default TodayG;\n","import React,{useEffect,useState,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport { Link} from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\nimport _ from 'lodash';\n// import { Table } from 'semantic-ui-react';\n\n\nimport { fetchMeetingDetails,\n    fetchRaceDetails,\n    fetchWinPlaceBet,\n    addBetSlipData,\n    allBetSlipData,\n    countBetSlipData,\n    remainingBetSlipData,\n    betSlipScreen,\n    fetchTodayRacing\n} from \"../../actions\";\n\nimport BetSlipHome from '../BetSlip/BetSlipHome';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetails = (props,ownProps)=>{\n    const [todayData, settodayData] = useState([]);\n    const [raceData, setraceData] = useState([]);\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    useEffect(() => {\n        props.fetchTodayRacing()\n        console.log(props)\n        if(props.todayRacing) {\n            var newArray=props.todayRacing.filter(function (el) {\n                return (\n                    el.meetingName ==props.place &&\n                    el.raceType==props.raceType &&\n                     el.venueMnemonic== props.code \n                )\n\n              });\n            // console.log(newArray)\n            settodayData(newArray)\n        }\n    }, [props]);\n    useEffect(() => {\n        if(todayData) {\n            if(todayData[0]) {\n                // console.log()\n                var dataass=todayData[0].races\n                var newArray=dataass.filter(function (el) {\n                    return (\n                        el.raceNumber ==props.slot \n                    )\n    \n                  });\n                // console.log(newArray)\n                setraceData(newArray)            \n            }\n        }\n    }, [todayData])\n    const [pool_fh, setpool_fh] = useState();\n    const [count, setcount] = useState()\n    const [place_list_all, setplace_list_all] = useState([\"NORTHFIELD PARK (USA) Race6\",'ergevdfgdbb','rgergegegeetheeh'])\n    // var place_list_all=[\"NORTHFIELD PARK (USA) Race6\",'ergevdfgdbb','rgergegegeetheeh'];\n    var runner_list_all=[[1,2,3,4],[3,4],[1,2,3]];\n    const [addedBet, setaddedBet] = useState(false)\n    const [runnerSelection, setrunnerSelection] = useState([]);\n    const [runner_win_place, setrunner_win_place] = useState({})\n\n    props.fetchMeetingDetails();\n    \n    \n    if (parseInt(props.slot)){\n        var initialValue=parseInt(props.slot)\n    } else {\n        initialValue=1\n    }\n    if ((props.place)){\n        var initialValuePlace=(props.place)\n    } else {\n        initialValuePlace=\"\"\n    }\n    const [place, setplace] = useState(initialValuePlace);\n    const [place_slot, setplace_slot] = useState(initialValue);\n    var races_list=[props.meetingDetails.races];\n    useEffect(() => {\n        setplace_slot(initialValue)\n    }, [initialValue,initialValuePlace])\n    useEffect(() => {\n        props.fetchRaceDetails(place_slot);\n    }, [place_slot,place])\n    races_list=Object.values(races_list);\n    var items_list={}\n    {races_list?races_list.map(item=>{\n         items_list=item;\n    }): items_list=[]};\n\n  \n    // console.log(props.remainingBetSlip)\n    useEffect(() => {\n        props.remainingBetSlipData(props.remainingBetSlip)\n    }, [props.meetingDetails])\n\n\n\n\n\n\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n\n\n     const duration=(raceStartTime)=>{ \n        var left=(Date.now()-new Date(raceStartTime))\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes==0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes==0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n        if (hours==0 && minutes>=5){\n            if (left>0){\n                return (-minutes+'m')\n            }\n            else return(minutes+'m')\n        } \n        if (hours==0 && (minutes<=5||minutes>=-5) \n            && (minutes>0||minutes<0)) {\n                if (left>0) {\n                    if (seconds==0){\n                        return(-minutes+'m')\n                    } else return (-minutes+'m'+seconds+'s')\n                }\n               else {\n                if (seconds==0){\n                    return(minutes+'m')\n                } else return (minutes+'m'+seconds+'s')\n                }\n        }  \n        if (hours==0 && minutes==0) {\n            if (left>0) {\n                return(-seconds+'s')\n            }\n            else return((seconds+'s'))\n        } \n    };\n\n    const startTime=(st)=>{\n        var current=new Date(st)\n        if (current.getMinutes()<9) {\n         return (current.getHours()+\":0\"+current.getMinutes())\n        }\n        else return (current.getHours()+\":\"+current.getMinutes())\n    };\n\n    const resultsTable=(props)=>{\n        return(\n            \n            <table className=\"race-table-results pane\">\n                {props.racingDetail.results.length>0?\n                <thead>\n                    <tr>\n                        <th >\n                            Results\n                        </th>\n                        <th >\n                            Number\n                        </th>\n                        <th >\n                            Runner Details\n                        </th>\n                        <th>\n                            Tote\n                        </th>\n                    </tr>\n                </thead>:\"\"}\n                <tbody className=\"\">\n                    {props.racingDetail.results.map(item=>{  \n                        return(\n                            <tr>\n                                <td className=\"result-position\">\n                                    {item.place}\n                                </td>\n                                <td className=\"result-number\">\n                                    {item.runnerNumber} \n                                </td>\n                            <td className=\"runner-details\">\n                                {item.runnerName}\n                                <dl className=\"runner-metadata-list\">\n                                    <dt>\n                                        D\n                                    </dt>\n                                    <dd className=\"full-name\">\n                                        {item.riderDriverName+\" \"}\n                                    </dd>\n                                    <dt>\n                                        T\n                                    </dt>\n                                    <dd className=\"full-name\">\n                                        {item.trainerName}\n                                    </dd>\n                                </dl>\n                            </td>\n                            <td >\n                                <div>\n                                    <div>\n                                        {item.toteWin}\n                                    </div>\n                                    <div >\n                                        {item.totePlace}\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    )})}\n                </tbody>\n            </table>     \n        )\n    };\n\n    const exoticTable=(props)=>{\n        return(\n            <table className=\"race-table pane\">\n                {props.racingDetail.exoticResults.length>0?\n            <thead >\n                <tr>\n                    <th>\n                        Exotic Results\n                    </th>\n                    <th >\n                        Results\n                    </th>\n                    <th >\n                        Dividend\n                    </th>\n                </tr>\n            </thead>:\"\"}\n            <tbody>\n                {props.racingDetail.exoticResults.map(exotic_item=>\n                    {\n                        return(\n                            <tr >\n                            <td>\n                                {exotic_item.wageringProduct}\n                            </td>\n                            <td >\n                                <div >\n                                    <div>\n                                        <span>\n                                            {exotic_item.Results}        \n                                        </span>\n                                    </div>\n                                </div>\n                            </td>\n                            <td >\n                                <div >\n                                    <div >\n                                        <span>\n                                            {exotic_item.Dividend}        \n                                        </span>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>                                              \n                        )\n                    })}\n            </tbody>\n        </table>\n        )\n    };\n\n\n    const sortRunnerInforTable=(props)=> {\n\n    }\n\n\n\n\n    const runnerInfoheader=(props)=>{\n        return(\n            <div className=\"runner-info-row\">\n                <div className=\"number-cell\">\n                    No\n                </div>\n                <div className=\"name-cell\">\n                    Runner\n                </div>\n\n                <div className=\"price-cell\">\n                    Win\n                </div>\n                <div className=\"price-cell\">\n                    Place\n                </div>\n                {(props.racingDetail.raceStatus==\"Open\")?(props.type==\"Quinella\"||props.type==\"Duet\")?\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                    :(props.type==\"Trifecta\")?\n                    <>\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                        <div className=\"price-cell\">\n                            2nd\n                        </div>\n                        <div className=\"price-cell\">\n                            3rd\n                        </div>\n                    </>\n                    :(props.type==\"First4\")?\n                    <>\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                        <div className=\"price-cell\">\n                            2nd\n                        </div>\n                        <div className=\"price-cell\">\n                            3rd\n                        </div>\n                        <div className=\"price-cell\">\n                            4th\n                        </div>\n                    </>:(props.type==\"Exacta\")?\n                    <>\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                        <div className=\"price-cell\">\n                            2nd\n                        </div>         \n                    </> :\"\":\"\"              \n                }\n\n            </div>\n        )\n    };\n\n    const handleClick=(props,runner_item)=>{\n        console.log(raceData,todayData)\n        if ((raceData[0].raceStatus==\"Normal\")) {\n\n            if(props.countBetSlip && props.countBetSlip.length==0) {\n\n                console.log(props.countBetSlip);\n                props.countBetSlipData(1);\n                setcount((props.countBetSlip));\n                setrunner_win_place({\n                    // \"pool_fh\":\"tk_integ\"+props.countBetSlip,\n                    \"name\":todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber || \"\"\n                    ,\"runners\":runner_item.runnerNumber,\"win\": null ,\"place\": null\n                });\n            } else {\n                console.log(\"two\");\n                // console.log(props.countBetSlip)\n                props.countBetSlipData(parseInt(props.countBetSlip)+1);\n                setcount((props.countBetSlip));\n                setrunner_win_place({\n                    // \"pool_fh\":\"tk_integ\"+props.countBetSlip,\n                    \"name\":todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber || \"\"\n                    ,\"runners\":runner_item.runnerNumber,\"win\": null ,\"place\": null\n                });\n            }\n            \n            \n            // console.log(props.countBetSlip)\n            // if(props.countBetSlip) {\n            //     console.log(props.countBetSlip)\n            //     setcount(props.countBetSlip+1);\n            // } else  {\n            //     console.log(props.countBetSlip)\n            //     setcount(1)\n            // }\n            \n        }\n    };\n\n\n\n    useEffect(() => {\n        if ((runner_win_place)) {\n            {props.addBetSlipData(runner_win_place)}\n            {props.allBetSlipData(runner_win_place)}\n            props.betSlipScreen(true)\n        }\n    }, [runner_win_place])\n\n    const runnerInfoBody=(props)=>{\n        return(\n            <div className=\"pseudo-body\">\n            {props.racingDetail.runners?props.racingDetail.runners.map(runner_item=>{\n                return(\n                    <div className=\"row-runner\">\n                    <div className=\"number-cell-body\">\n                        {runner_item.runnerNumber}\n                    </div>\n                    <div className=\"name-cell-body\">\n                        <div >\n                            <div className=\"runner-name-wrapper\">\n                                <div className=\"runner-name\">\n                                    {runner_item.runnerName}\n                                </div>\n                            </div>\n                            <div className=\"runner-metadata-list\">\n                                <dt>\n                                    D\n                                </dt>\n                                <dd className=\"full-name\">\n                                    {runner_item.riderDriverName}\n                                </dd>\n                                <dt>\n                                    T\n                                </dt>\n                                <dd className=\"full-name\">\n                                    {runner_item.trainerName}\n                                </dd>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"price-cell-body\"\n                        onClick={()=>{\n                            handleClick(props,runner_item,pool_fh,runnerSelection,place_list_all,runner_list_all)\n                        }}\n                        >\n                        <div className=\"price-cell-body-first\">\n                            <div >\n                                <div className=\"first-price\">\n                                    ${runner_item.returnWin}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"price-cell-body\">\n                            <div>\n                                <div>\n                                    ${runner_item.returnPlace}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {(props.racingDetail.raceStatus==\"Open\")?(props.type==\"Quinella\"||props.type==\"Duet\")?\n                        <div className=\"price-cell-body\">\n                            <div>\n                                <div>\n                                <input\n                                        name=\"1st\"\n                                        type=\"checkbox\"\n                                        />                                    \n                                </div>\n                            </div>\n                        </div>\n                        :(props.type==\"Trifecta\")?\n                        <>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"1st\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"2nd\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"3rd\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                        :(props.type==\"First4\")?\n                        <>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"1st\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"2nd\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"3rd\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"4th\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                        </>:(props.type==\"Exacta\")?\n                        <>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"1st\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                            name=\"2nd\"\n                                            type=\"checkbox\"\n                                            />                                    \n                                    </div>\n                                </div>\n                        </div>      \n                        </> :\"\":\"\"           \n                    }\n                </div>\n                )\n            }):\"\"}\n        </div>\n        )\n    };\n\n    const runnerInfo=(props)=>{\n        return(\n            <div className=\"race-runners-wrapper results\">\n                <div className=\"pseudo-table\">\n                    {runnerInfoheader(props)}\n                    {runnerInfoBody(props)}\n                </div>\n            </div>\n        )\n    };\n\n    const raceName=(props)=>{\n        const raceSlots=(props)=>{\n            return(                        \n            <div className=\"meeting-race-selector\">\n                <div className=\"meeting-info\">\n                    <div className=\"meeting-info-race-selector-wrapper\">\n                        <div className=\"meeting-info-race-selector\">     \n                            {todayData?todayData[0]?todayData[0].races.map(item=>{\n                                return(\n                                    <Link to={{\n                                        pathname:`/${date}/${props.place}/${props.code}/${props.raceType}/${item.raceNumber}/Win`,\n                                        slot:item.raceNumber, \n                                        place: props.place,\n                                        code:props.code,\n                                        raceType:props.raceType\n                                       \n                                    }}\n                                        className={item.raceStatus==\"Paying\"?\n                                        \"meeting-info-race  meeting-info-race-closed\":\n                                        \"meeting-info-race  meeting-info-race-open\"}>\n                                            R{item.raceNumber}  \n                                            <span className={item.raceStatus==\"Paying\"?\"meeting-info-race-results\":\"meeting-info-race-time\"}>\n                                                {item.raceStatus==\"Paying\"?item.results:startTime(item.raceStartTime)} \n                                            </span>\n                                        {/* </a> */}\n                                    </Link>\n                            )}):\"\":\"\"}\n                        </div>\n                    </div>\n                    {/* <div className=\"meeting-info-meeting-conditions\">\n                        <div className=\"meeting-info-track-condition\">\n                            {props.racingDetail.trackCondition}   \n                        </div>\n                        <div className=\"meeting-info-weather-condition\">\n                            <div className=\"meeting-info-weather-condition-description\">\n                                {props.racingDetail.weatherCondition}\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            )\n        };\n    \n        return(\n            <div className=\"pane\">\n                <div className=\"race-header-container\">\n                    <header className=\"race-header\">\n                        <div className=\"race-header-info\">\n                            <div className=\"race-heading\">\n                                <div className=\"race-number\">\n                                    R{raceData?raceData[0]?\n                                    raceData[0].raceNumber:\"\":\"\"}\n                                </div>\n                                <div className=\"race-header-race-time-not-open\">\n                                    {startTime(raceData?raceData[0]?\n                                    raceData[0].raceStartTime:\"\":\"\")}\n                                </div>\n                            </div>\n                            <div className=\"race-info-wrapper\">\n                                <div className=\"race-name\">\n                                    {raceData?raceData[0]?\n                                    raceData[0].raceName:\"\":\"\"}\n                                </div>\n                                <ul className=\"race-metadata-list\">\n                                <li className=\"status-text\">\n                                {raceData?raceData[0]?\n                                    raceData[0].raceStatus==\"Normal\"?\n                                    duration(raceData[0].raceStartTime):raceData[0].raceStatus:\"\":\"\"}\n                                    {/* {raceData?raceData[0]?\n                                    raceData[0].race?\n                                    (raceData[0].raceStatus==\"Normal\"?\n                                    startTime(raceData[0].raceStartTime):\n                                    raceData[0].raceStatus):\"\":\"\":\"\"} */}\n                                </li>\n                                    <li>{raceData?raceData[0]?\n                                    raceData[0].raceDistance:\"\":\"\"}m</li>\n                                    <li>{todayData?todayData[0]?\n                                    todayData[0].prizeMoney:\"\":\"\"}</li>\n                                </ul>\n                            </div>\n                        </div>\n                        {raceSlots(props)}\n                    </header>    \n                </div>\n            </div>\n        )\n    };\n\n    const poolTot=(props)=>{\n        return(\n            <div className=\"page-section pane\">\n            <div className=\"info-table\">\n                <div className=\"tabbed-sections\">\n                    <nav className=\"tabs-nav\">\n                        <a className=\"active\">\n                            Pools\n                        </a>\n                    </nav>\n                    <section className=\"tabs-section active\">\n                        <section className=\"section\">\n                            <ul className=\"pools-list\">\n                                {props.racingDetail.poolTotals?props.racingDetail.poolTotals.map(total_item=>{\n                                    return(\n                                        <li>\n                                        <span>\n                                            {total_item.wageringProduct}\n                                        </span>\n                                        <span className=\"amount-span\">\n                                            {total_item.poolTotal}\n                                        </span>\n                                    </li>\n                                    )\n                                }):\"\"}\n                            </ul>\n                        </section>\n                    </section>\n                </div>\n            </div>\n        </div>    \n        )\n    };\n\n    const racetypes=[{\"name\":\"Win/Place\",\"url\":\"/RaceDetail/Win\"},\n    {\"name\":\"Quinella\",\"url\":\"/RaceDetail/Quinella\"},\n    {\"name\":\"Trifecta\",\"url\":\"/RaceDetail/Trifecta\"},\n    {\"name\":\"First 4\",\"url\":\"/RaceDetail/First4\"},\n    {\"name\":\"Exacta\",\"url\":\"/RaceDetail/Exacta\"},\n    {\"name\":\"Duet\",\"url\":\"/RaceDetail/Duet\"}]\n    \n    const placeBets=(props)=>{\n        return(\n            <div className=\"bet-type-carousel\">\n                <ul className=\"tbc-nav-tabular-list bet-type-carousel-list\">\n                    {racetypes.map(item=>{\n                        return(\n                            <li className=\"tbc-nav-tabular-list-item\">\n                                <Link  to={{pathname:item.url,\n                                    slot:place_slot,\n                                place:place}} \n                                className=\"tbc-nav-tabular-item-link\">\n                                    <div className=\"bet-type-carousel-description\">\n                                        {item.name}\n                                    </div>\n                                    <div className=\"bet-type-carousel-legs\">\n                                    </div>\n                                 </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n                \n            </div>\n        )\n    };\n    return (\n        <main className=\"page-content\">\n            <div className=\"left-column\">\n                <ui-view>\n                    <div className=\"all-tables\">\n                        {raceName(props)}\n                        <div className=\"page-section pane\">\n                        </div>\n                        <div className=\"page-section pane\">  \n                            <div className=\"race-results-wrapper\">\n                                <section className={props.racingDetail.raceStatus==\"Open\"?\n                                \"runners-section\":\"results-section\"}>\n                                    {/* {props.racingDetail.raceStatus==\"Open\"?placeBets():\"\"} */}\n                                    {/* <div className=\"page-section-break\"> */}\n                                    {/* </div> */}\n                                    {raceData?raceData[0]?raceData[0].raceStatus==\"Paying\"?resultsTable(props):\"\":\"\":\"\"}\n                                    {raceData?raceData[0]?raceData[0].raceStatus==\"Paying\"?exoticTable(props):\"\":\"\":\"\"}\n                                    {/* {raceData.raceStatus!=\"Normal\"?exoticTable(props):\"\"} */}\n                                    {runnerInfo(props)}\n                                </section>\n                            </div>\n                        </div>\n                        {poolTot(props)}\n                    </div>\n                </ui-view>\n            </div>\n            <MediaQuery query='(min-width: 800px)'>\n                <BetSlipHome/>\n            </MediaQuery>\n        </main>\n    );\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    // console.log(ownProps)\n    return{ \n        todayRacing:state.todayRacing,\n        slot:ownProps.slot,\n        code:ownProps.code,\n        raceType:ownProps.raceType,\n        place:ownProps.place,\n        type:ownProps.type,\n\n\n\n\n\n\n\n        meetingDetails:state.meetingDetails,\n        racingDetail:state.racingDetail,\n        betSlipInd:state.betSlipInd,\n        countBetSlip:state.countBetSlip,\n        screenStatus:state.screenStatus,\n        remainingBetSlip:state.remainingBetSlip,\n        allBetSlip:state.allBetSlip,\n\n        bet_pool_fh_1:ownProps.bet_pool_fh_1,\n        bet_pool_fh_2:ownProps.bet_pool_fh_2,\n        \n    }\n}\nexport default connect(mapStateToProps, \n    { \n        fetchRaceDetails,\n        fetchMeetingDetails,\n        addBetSlipData,\n        allBetSlipData,\n        countBetSlipData,\n        betSlipScreen,\n        remainingBetSlipData,\n\n\n        fetchTodayRacing\n        })\n    (RaceDetails);\n\n\n\n","import React,{ useState,useEffect,useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link} from \"react-router-dom\";\nimport { fetchNextRace } from \"../../actions\";\nimport \"./NextListHome.css\";\nimport HomeImage from \"../../images/Home.gif\"\n\nconst NextListHome = (props)=>{\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n\n    props.fetchNextRace();\n    // console.log(props.next)\n\n\n    const [nextRace,setnextRace]=useState([]);\n    const [nextRaceGrey,setnextRaceGrey]=useState([]);\n    const [nextRaceHarness,setnextRaceHarness]=useState([]);\n    const [fetched, setfetched] = useState(false)\n\n\n    const fetchResources=(next)=>{\n        {next.map(item =>{\n            // console.log(item)\n            switch(item.meeting.raceType) {\n                case 'R' :\n                    setnextRace(oldArray => [...oldArray, item]);\n                    break\n                case 'G' :\n                    setnextRaceGrey(oldArray => [...oldArray, item]);\n                    break\n                default:\n                    setnextRaceHarness(oldArray => [...oldArray, item]);\n                    break        \n                };\n        })}\n    };\n    useEffect(()=> {\n        if (props.next.length>0) {\n            \n            fetchResources(props.next);\n        }\n    },[props.next]);\n\n    const startTime=(st)=>{\n        var current=new Date(st)\n        if (current.getMinutes()<9) {\n         return (current.getHours()+\":0\"+current.getMinutes())\n        }\n        else return (current.getHours()+\":\"+current.getMinutes())\n    }\n\n    const renderTodayHome=((details,type)=>{\n        \n        return (        \n            <section className=\"horizontal-pane\">\n            <section className=\"next-to-go-races-section pane page-section\">\n                <div className=\"page-section-heading\">\n                    {type}\n                </div>\n                <race-list races=\"nextToGoRaces\">\n                    <ul className=\"race-list\">\n                        <li>\n                            <a>\n                                <div>\n                                {details?details.length>0?details.map(item => {\n                                //    console.log(details)\n                                //    console.log(item.raceNumber)\n                                //    console.log(item.meeting.meetingName)\n                                //    console.log(item.meeting.venueMnemonic)\n                                //    console.log(item.meeting.raceType)\n                                \n                                   return(\n                                        <Link to={{\n                                            slot:item.raceNumber, \n                                            place: item.meeting.meetingName,\n                                            code:item.meeting.venueMnemonic,\n                                            raceType:item.meeting.raceType,\n                                            pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`\n\n                                           \n                                        }} className=\"next-item-list-home\">                        \n                                            <time>{startTime(item.raceStartTime)}</time>\n                                            <p>{item.meeting.meetingName} ({item.meeting.location})</p>\n                                            {/* <div className=\"race-details-container\">\n                                                <span className=\"race-detail\">\n                                                    {item.raceDistance}m\n                                                </span>\n                                                <span className=\"race-detail\">\n                                                    {item.meeting.trackCondition} \n                                                </span>                            \n                                            </div> */}\n                                        </Link> \n                                )}):\"\":\"\"}\n                                </div>\n                            </a>\n                        </li>\n                    </ul>\n                </race-list>\n            </section>\n        </section>\n        )\n    });\n\n\n    return(\n        <main className=\"page-content\">\n            <div className=\"left-column\">\n                <ui-view>\n                    {/* <img src={HomeImage} className=\"main-image\">\n                    </img> */}\n                    <div>\n                        <div className=\"page-heading\">\n                            Ready To Take Off\n                        </div>\n                        \n                        <div className=\"row\">\n                            <div className=\"col-sm-4\">\n                                {nextRace?renderTodayHome(nextRace.slice(0,3),'Racing'):\"\"}            \n                            </div>\n                            <div className=\"col-sm-4\">\n                                {nextRaceGrey?renderTodayHome(nextRaceGrey.slice(0,3),'GreyHound'):\"\"}            \n                            </div>\n                            <div className=\"col-sm-4\">\n                                {nextRaceHarness?renderTodayHome(nextRaceHarness.slice(0,3),'Harness'):\"\"}            \n                            </div>\n                        </div>\n                    </div>\n\n\n                </ui-view>\n            </div>\n        </main>\n    );\n}; \n\nconst mapStateToProps=(state)=> {\n    return{ next:state.next}\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(NextListHome);\n\n\n                    /* <nav-bar menu-items=\"menuItems\">\n                        {renderPagesHome(linksList)}\n                    </nav-bar> */\n\n/// Context\n\n// import BetSlipStore from \"../../context/BetSlipContext\";\n\n\n    // var contextType=BetSlipStore;\n    // const betSlipWin=contextType._currentValue.betSlipFormatWin;\n    // const betSlipPlace=contextType._currentValue.betSlipFormatPlace;\n    // const betSlipPlace={\n    //     \"bet_fh\": \"tk_integ_\",\n    //     \"bet_pool_fh\": \"\",\n    //     \"stake_cents\": 0,\n    //     \"combinations\":[\n    //     {\n    //     \"place\":1,\n    //     \"runners\":[]\n    //     }\n    //     ]\n    //   };\n    // const betSlipWin={\n    //     \"bet_fh\": \"tk_integ_\",\n    //     \"bet_pool_fh\": \"\",\n    //     \"stake_cents\": 0,\n    //     \"combinations\":[\n    //     {\n    //     \"place\":1,\n    //     \"runners\":[]\n    //     }\n    //     ]\n    //   };\n\n\n        // const betSlipFormat=(item)=>{\n    //     if (item.raceType=='R') {\n    //         var type='racing'\n    //     }\n    //     if (item.raceType=='G') {\n    //         var type='greyhound'\n    //     }\n    //     if (item.raceType=='H') {\n    //         var type='harness'\n    //     }\n    //     betSlipWin.bet_pool_fh=item.raceStartTime.slice(0,6)+'_'+\n    //     \"racing_\"+type+'_'+item.meetingName+'_'+item.location+'_'+item.raceNumber+'_'+'w';\n    //     betSlipPlace.bet_pool_fh=item.raceStartTime.slice(0,6)+'_'+\n    //     \"racing_\"+type+'_'+item.meetingName+'_'+item.location+'_'+item.raceNumber+'_'+'p'\n    // };\n\n\n        // const linksList=[{\"name\":\"Next To Go\",\n    //                     \"url\":\"/next-to-go\"},\n    //                     {\"name\":\"Racing\",\n    //                     \"url\":\"/Today/R\"},\n    //                     {\"name\":\"GreyHound\",\n    //                     \"url\":\"/Today/G\"},\n    //                     {\"name\":\"Harness\",\n    //                     \"url\":\"/Today/H\"}]\n\n\n\n    \n    // <div className=\"next-data\">\n    //     <h1>Racing</h1>\n    //     <Grid container spacing={3}>\n    //         {renderTodayTableList(nextRace.slice(0,6))}\n    //     </Grid>\n    //     <h1>GreyHound</h1>\n    //     <Grid container spacing={3}>\n    //         {renderTodayTableList(nextRaceGrey.slice(0,6))}\n    //     </Grid>\n    //     <h1>Harness</h1>\n    //     <Grid container spacing={3}>\n    //         {renderTodayTableList(nextRaceHarness.slice(0,6))}\n    //     </Grid>\n    // </div>\n\n\n    ","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../actions\";\n\n\nimport Header from '../Nav/Header';\nimport NextList from '../Next/NextList';\nimport RaceDetails from '../RaceDetail/RaceDetails';\n\nimport \"./RaceDetails.css\";\nimport RespHeader from '../Nav/RespHeader';\n\nconst RaceDetailsPage=(props)=> {\n    \n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n        <div>\n              <MediaQuery query='(min-width: 980px)'>\n              <SimpleBar style={{ maxHeight: '100vh' }}>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place}  type=\"\"\n                  bet_pool_fh_1={props.location.bet_pool_fh_1}\n                  bet_pool_fh_2={props.location.bet_pool_fh_2}\n                  />\n                  </SimpleBar>\n              </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n              <SimpleBar style={{ maxHeight: '100vh' }}>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place}  type=\"\"\n                  bet_pool_fh_1={props.location.bet_pool_fh_1}\n                  bet_pool_fh_2={props.location.bet_pool_fh_2}\n                  />\n                  </SimpleBar>\n              </MediaQuery>     \n\n        </div>\n    )\n};\n\nconst mapStateToProps=(state)=> {\n    return{ next:state.next}\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPage);","import React from 'react';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport Header from '../Nav/Header';\nimport RespHeader from '../Nav//RespHeader';\n\nimport NextListHome from '../Home/NextListHome';\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport \"./Home.css\";\n\nconst Home=() =>{\n    const scrollBarStyle = {\n        width: '100vw',\n        height: '100vh',\n      };\n    return (\n        <>\n            \n                <MediaQuery query='(min-width: 980px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n\n                <RespHeader/>\n                    <NextListHome/>\n                </SimpleBar>\n\n                </MediaQuery>\n                <MediaQuery query='(max-width: 980px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n\n                    <Header/>\n                    <NextListHome/>\n                </SimpleBar>   \n                </MediaQuery>    \n            \n        </>\n    )\n}\nexport default Home;\n\n        {/* <MediaQuery query='(min-width: 800px)'>\n           <ui-view>\n                <Header/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                                <NextListHome/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>         \n        </MediaQuery>\n        <MediaQuery query='(max-width: 800px)'>\n            <Header/>\n            <NextListHome/>\n        </MediaQuery> */}\n\n\n\n\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageWin=(props,ownProps)=> {\n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Win\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Win\"/>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageWin);","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageQuinella=(props,ownProps)=> {\n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Quinella\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Quinella\"/>\n              </MediaQuery> \n          </SimpleBar>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ next:state.next,\n      slot:ownProps.slot,\n      place:ownProps.place\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageQuinella);","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageDuet=(props,ownProps)=> {\n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Trifecta\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Trifecta\"/>\n              </MediaQuery>   \n          </SimpleBar>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ next:state.next,\n      slot:ownProps.slot,\n      place:ownProps.place\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageDuet);","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageFirst4=(props,ownProps)=> {\n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n        <div>\n            <SimpleBar style={{ maxHeight: '100vh' }}>\n          \n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"First4\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"First4\"/>\n              </MediaQuery>    \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ next:state.next,\n      slot:ownProps.slot,\n      place:ownProps.place\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageFirst4);","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\n\nimport \"./RaceDetails.css\";\nimport RespHeader from '../../Nav/RespHeader';\n\nconst RaceDetailsPageExacta=(props,ownProps)=> {\n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n        <div>\n            <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Exacta\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Exacta\"/>\n              </MediaQuery>  \n            </SimpleBar>  \n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ next:state.next,\n      slot:ownProps.slot,\n      place:ownProps.place\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageExacta);","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport { fetchNextRace } from \"../../../actions\";\n\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\n\nimport \"./RaceDetails.css\";\nimport RespHeader from '../../Nav/RespHeader';\n\nconst RaceDetailsPageDuet=(props,ownProps)=> {\n    props.fetchNextRace();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    return (\n        <div>\n            <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Duet\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} place={props.location.place} type=\"Duet\"/>\n              </MediaQuery>   \n            </SimpleBar> \n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ next:state.next,\n      slot:ownProps.slot,\n      place:ownProps.place\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageDuet);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { hot } from 'react-hot-loader/root';\n\n\nimport {BetSlipStore } from \"./context/BetSlipContext\"\nimport history from \"./history\";\nimport NextScreen from './components/Screens/NextScreen';\nimport TodayR from './components/Screens/TodayR';\nimport TodayG from './components/Screens/TodayG';\nimport TodayH from './components/Screens/TodayH';\nimport RaceDetailsPage from './components/Screens/RaceDetailsPage';\nimport Home from './components/Screens/Home';\n\n\nimport RaceDetailsPageWin from './components/Screens/PlaceBetScreen/RaceDetailsPageWin';\nimport RaceDetailsPageWinQuinella from './components/Screens/PlaceBetScreen/RaceDetailsPageQuinella';\nimport RaceDetailsPageWinTrifecta from './components/Screens/PlaceBetScreen/RaceDetailsPageTrifecta';\nimport RaceDetailsPageWinFirst4 from './components/Screens/PlaceBetScreen/RaceDetailsPageFirst4';\nimport RaceDetailsPageWinExacta from './components/Screens/PlaceBetScreen/RaceDetailsPageExacta';\nimport RaceDetailsPageWinDuet from './components/Screens/PlaceBetScreen/RaceDetailsPageDuet';\n\nfunction App() {\n  return (\n    <Router history={history} basename={process.env.PUBLIC_URL}>\n      <div>\n        <BetSlipStore>\n          <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/next-to-go\" exact component={NextScreen}/>\n              <Route path=\"/:date/R\" exact component={TodayR}/> \n              <Route path=\"/:date/G\" exact component={TodayG}/> \n              <Route path=\"/:date/H\" exact component={TodayH}/> \n              {/* <Route path=\"/RaceDetail\" exact component={RaceDetailsPageWin}/> */}\n              <Route path=\"/:date/:place/:code/:type/:slot/Win\" exact component={RaceDetailsPageWin}/>\n              <Route path=\"/RaceDetail/Quinella\" exact component={RaceDetailsPageWinQuinella}/>\n              <Route path=\"/RaceDetail/Trifecta\" exact component={RaceDetailsPageWinTrifecta}/>\n              <Route path=\"/RaceDetail/First4\" exact component={RaceDetailsPageWinFirst4}/>\n              <Route path=\"/RaceDetail/Exacta\" exact component={RaceDetailsPageWinExacta}/>\n              <Route path=\"/RaceDetail/Duet\" exact component={RaceDetailsPageWinDuet}/>  \n          </Switch>\n        </BetSlipStore>\n      </div>\n    </Router>\n  );\n};\n\nexport default hot(App);\n","import {combineReducers} from 'redux';\nimport nextReducer from './nextReducer';\nimport nextReducerHome from './nextReducerHome';\n\nimport todayRacing from './todayRacing';\nimport racingDetail from './racingDetail';\nimport meetingDetails from './meetingDetails';\nimport pathParams from './pathParamReducer';\n\n\n\nimport winPlaceBetreducer from \"./winPlaceBetreducer\";\nimport betSlipIndreducer from \"./betSlipInd\";\nimport allBetSlipDatareducer from \"./allBetSlipData\";\nimport screenStatusReducers from \"./screenStatusReducers\";\nimport postWinPlaceReducer from \"./postWinPlace\";\n\nimport deleteBetSlipReducer from  \"./deleteBetSlip\";\nimport remainingBetSlipReducer from  \"./remainingBetSlipData\";\n\nimport countBetSlipReducer from  \"./countBetSlipData\"\n\n\nexport default combineReducers({\n    next: nextReducer,\n    nextHome:nextReducerHome,\n    todayRacing: todayRacing,\n    racingDetail: racingDetail,\n    meetingDetails: meetingDetails,\n    pathParams:pathParams,\n    winPlaceBet: winPlaceBetreducer,\n    betSlipInd: betSlipIndreducer,\n    allBetSlip: allBetSlipDatareducer,\n    deleteBetSlip:deleteBetSlipReducer,\n    screenStatus:screenStatusReducers,\n    remainingBetSlip:remainingBetSlipReducer,\n    countBetSlip:countBetSlipReducer,\n    postWinPlace:postWinPlaceReducer\n});","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_NEXT_RACE':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_NEXT_RACE_HOME':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_TODAY_RACING':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_RACE_DETAIL':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_MEETING_DETAILS':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_PATH_PARAMS':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_WIN_PLACE_BET':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'ADD_BET_SLIP_DATA':\n            return [...state,action.payload]\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'ALL_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'DELETE_BET_SLIP_DATA':\n            return [...state,action.payload]\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'BET_SLIP_SCREEN':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'REMAINING_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'COUNT_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'POST_WIN_PLACE':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\n\nimport App from './App';\nimport reducers from \"./reducers\";\nimport \"./index.css\"\nconst store=createStore(reducers,applyMiddleware(thunk))\nReactDOM.render(\n    <Provider store={store}>\n            <App/>\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}
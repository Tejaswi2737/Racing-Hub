{"version":3,"sources":["images/Home.gif","history.js","actions/index.js","components/Nav/Menu.js","components/Nav/Header.js","components/Next/NextRace.js","components/Next/NextList.js","components/BetSlip/BetSlipHome.js","components/Nav/RespHeader.js","components/Screens/NextScreen.js","components/Today/TodayRacingDetails.js","components/Today/TodayDetails.js","components/Screens/TodayR.js","components/Screens/TodayG.js","components/Screens/TodayH.js","components/Home/NextListHome.js","components/Screens/Home.js","components/RaceDetail/RaceDetails.js","components/Screens/PlaceBetScreen/RaceDetailsPageWin.js","components/Screens/PlaceBetScreen/RaceDetailsPageQuinella.js","components/Screens/PlaceBetScreen/RaceDetailsPageTrifecta.js","components/Screens/PlaceBetScreen/RaceDetailsPageFirst4.js","components/Screens/PlaceBetScreen/RaceDetailsPageExacta.js","components/Screens/PlaceBetScreen/RaceDetailsPageDuet.js","components/Screens/MobileBetSlipScreen.js","App.js","reducers/index.js","reducers/nextReducer.js","reducers/nextReducerHome.js","reducers/todayRacing.js","reducers/racingDetail.js","reducers/meetingDetails.js","reducers/pathParamReducer.js","reducers/winPlaceBetreducer.js","reducers/betSlipInd.js","reducers/allBetSlipData.js","reducers/deleteBetSlip.js","reducers/screenStatusReducers.js","reducers/remainingBetSlipData.js","reducers/countBetSlipData.js","reducers/postWinPlace.js","reducers/deleteSingleBet.js","reducers/deleteAllBets.js","index.js"],"names":["module","exports","createHistory","fetchTodayRacing","dispatch","type","payload","meetingDetailsAll","fetchNextRace","nextData","fetchPathParams","pathParam","addBetSlipData","betSlipind","remainingBetSlipData","remaining","betSlipScreen","screen","allBetSlipData","dataAll","deleteSingleBet","deleteSingle","deleteAllBets","deleteAll","MenuView","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","now","className","exact","to","Header","id","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","gridList","flexWrap","transform","connect","state","pathParams","props","classes","useState","nextRace","setnextRace","nextRaceGrey","setnextRaceGrey","nextRaceHarness","setnextRaceHarness","Race","setRace","Grey","setGrey","Harness","setHarness","firstTime","setfirstTime","firstNumber","setfirstNumber","setfetched","useEffect","next","raceStartTime","raceNumber","showLoading","setShowLoading","diffTime","timerToClearSomewhere","useRef","current","setInterval","clearInterval","setTimeout","map","item","meeting","raceType","oldArray","duration","left","delta","Math","abs","floor","hours","minutes","seconds","renderTodayTableList","title","query","Grid","xs","pathname","meetingName","venueMnemonic","slot","place","code","location","onClick","container","slice","width","backgroundColor","background","React","value","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","aria-label","betSlipInd","allBetSlip","deleteBetSlip","remainingBetSlip","screenStatus","postWinPlace","deleteSingleBetData","deleteAllBetData","deleteAllBet","deleteBetSlipData","betSlipDelete","postWinPlaceBets","betData","poolFinalList","setdeletedBets","RemainingBets","setRemainingBets","finalRemainingBets","setfinalRemainingBets","placeWinPlaceBetList","setplaceWinPlaceBetList","showCurrency","setshowCurrency","setdeleted","startSlip","setstartSlip","settypeBet","console","log","window","innerWidth","performance","navigation","users","rem","JSON","parse","localStorage","getItem","Object","values","grouped","_","reduce","result","user","name","push","poolList","keys","poolname","groupedRunnersNo","runners","accumulator","currentValue","concat","allNames","itemList","winList","placeList","i","isInteger","parseInt","pos","findIndex","win","itemPool","items","runnnerInd","setItem","stringify","style","maxHeight","no","updateFieldChanged","e","preventDefault","newArr","target","key","placeholder","min","isNaN","betSlipPlaceInput","obje","filter","e1","deleteSingleBetfun","height","sumBy","RespHeader","racingSlots","todayRacing","races","Location","raceStatus","st","startTime","Array","isArray","results","class","ownProps","detail","todayData","settodayData","newArray","el","fetchToday","fetchTodayRaceInfo","racingInfo","renderTodayHome","details","meetingDetails","racingDetail","countBetSlip","bet_pool_fh_1","bet_pool_fh_2","fetchRaceDetails","data","raceDetailsResults1","raceDetailsResults2","raceDetailsResults3","raceDetailsResults4","raceDetailsResults5","raceDetailsResults6","raceDetailsResults7","raceDetailsResults8","raceDetailsResults9","raceDetailsResults10","raceDetailsResults11","raceDetailsResults12","fetchMeetingDetails","countBetSlipData","count","initialValuePlace","setplace","initialValue","place_slot","setplace_slot","raceData","setraceData","setcount","runner_win_place","setrunner_win_place","setrunner_quinella","pathValues","setpathValues","races_list","runnerInfoBody","runner_item","runnerNumber","runnerName","riderDriverName","trainerName","handleClickWin","cursor","returnWin","returnPlace","handleClickQuinella","racetypes","raceName","raceDistance","prizeMoney","raceSlots","url","toteWin","totePlace","resultsTable","exoticResults","exotic_item","wageringProduct","Results","Dividend","exoticTable","runnerInfoheader","runnerInfo","poolTotals","total_item","poolTotal","poolTot","MobileBetSlipScreen","hot","history","basename","process","path","component","Home","NextScreen","TodayR","TodayG","TodayH","RaceDetailsPageWin","RaceDetailsPageWinQuinella","RaceDetailsPageWinTrifecta","RaceDetailsPageWinFirst4","RaceDetailsPageWinExacta","RaceDetailsPageWinDuet","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","action","nextHome","winPlaceBet","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6741042c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Home.4a2d5568.gif\";","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","// import axios from \"axios\"\n\n\n// export const fetchTodayRacing =  () => {\n//   return function(dispatch) {\n//     return axios.get(\"https://firebasestorage.googleapis.com/v0/b/betdata123.appspot.com/o/meetingDetailsAll.json?alt=media&token=16ad09ff-6424-4166-8356-2c9a1d89b8ed\")\n//     .then(({ data }) => {\n//       dispatch({\n//         type: 'FETCH_TODAY_RACING',\n//         payload: data\n//       });\n//         });\n//       }\n// };\n\n// export const fetchNextRace =  () => {\n//   return function(dispatch) {\n//     return axios.get(\"https://firebasestorage.googleapis.com/v0/b/betdata123.appspot.com/o/nextToGo.json?alt=media&token=6ab5cab9-98f7-40b6-b815-5d2d4e2e8962\")\n//       .then(({ data }) => {\n//         dispatch({\n//           type: 'FETCH_NEXT_RACE',\n//           payload: data\n//         });\n//           });\n//   };\n// };\n\n// export const fetchMeetingDetails =  () => {\n//   return function(dispatch) {\n//     return axios.get(\"https://firebasestorage.googleapis.com/v0/b/betdata123.appspot.com/o/meetingDetails.json?alt=media&token=338c0769-ca58-4d86-87ad-f32229f2df76\")\n//     .then(({ data }) => {\n//       dispatch({\n//         type: 'FETCH_MEETING_DETAILS',\n//         payload: data\n//       });\n//         });\n//       }\n// };\n\n// export const fetchRaceDetails =  (props) => {\n//   return function(dispatch) {\n//     return axios.get(`https://firebasestorage.googleapis.com/v0/b/betdata123.appspot.com/o/raceDetailsResults${props}.json?alt=media&token=4cc631e9-84fc-4419-9560-68787ade170c`)\n//     .then(({ data }) => {\n//       dispatch({\n//         type: 'FETCH_RACE_DETAIL',\n//         payload: data\n//       });\n//         });\n//       }\n// };\nimport nextData from \"../data/nextToGo.json\";\nimport nextDataHome from \"../data/nexttogoHome.json\";\nimport meetingDetailsAll from \"../data/meetingDetailsAll.json\";\nimport raceDetailsResults1 from \"../data/raceDetailsResults1.json\";\nimport raceDetailsResults2 from \"../data/raceDetailsResults2.json\";\nimport raceDetailsResults3 from \"../data/raceDetailsResults3.json\";\nimport raceDetailsResults4 from \"../data/raceDetailsResults4.json\";\nimport raceDetailsResults5 from \"../data/raceDetailsResults5.json\";\nimport raceDetailsResults6 from \"../data/raceDetailsResults6.json\";\nimport raceDetailsResults7 from \"../data/raceDetailsResults7.json\";\nimport raceDetailsResults8 from \"../data/raceDetailsResults8.json\";\nimport raceDetailsResults9 from \"../data/raceDetailsResults9.json\";\nimport raceDetailsResults10 from \"../data/raceDetailsResults10.json\";\nimport raceDetailsResults11 from \"../data/raceDetailsResults11.json\";\nimport raceDetailsResults12 from \"../data/raceDetailsResults12.json\";\nimport meetingDetails from \"../data/meetingDetails.json\";\nimport winPlaceBet from \"../data/win_place_bet.json\";\n\n\nexport const fetchTodayRacing =  () => {\n  return function (dispatch) {\n    \n    dispatch({\n      type: 'FETCH_TODAY_RACING',\n      payload: meetingDetailsAll\n    });\n  }\n};\n\nexport const fetchNextRace =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_NEXT_RACE',\n      payload: nextData\n    });\n  }\n};\nexport const fetchNextRaceHome =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_NEXT_RACE_HOME',\n      payload: nextDataHome\n    });\n  }\n};\nexport const fetchMeetingDetails =  () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_MEETING_DETAILS',\n      payload: meetingDetails\n    });\n  }\n};\nexport const fetchRaceDetails =  (props) => {\n  console.log(props)\n  var data={}\n  switch(props) {\n    case 1:\n      data=raceDetailsResults1;\n      break;\n    case 2:\n      data=raceDetailsResults2;\n      break;\n    case 3:\n      data=raceDetailsResults3;\n      break;\n    case 4:\n      data=raceDetailsResults4;\n      break;\n    case 5:\n      data=raceDetailsResults5;\n      break;\n    case 6:\n      data=raceDetailsResults6;\n      break;   \n    case 7:\n      data=raceDetailsResults7;\n      break;\n    case 8:\n        data=raceDetailsResults8;\n        break;\n    case 9:\n        data=raceDetailsResults9;\n        break;\n    case 10:\n        data=raceDetailsResults10;\n        break;\n    case 11:\n        data=raceDetailsResults11;\n        break;\n    case 12:\n        data=raceDetailsResults12;\n        break;            \n    default:\n      data= null;\n      break;\n  };\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_RACE_DETAIL',\n      payload: data\n    })\n  }\n};\n\nexport const fetchPathParams =  (pathParam) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'FETCH_PATH_PARAMS',\n      payload: pathParam\n    });\n  }\n};\n\n\n\n\n\nexport const addBetSlipData =  (betSlipind) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'ADD_BET_SLIP_DATA',\n      payload: betSlipind\n    });\n  }\n};\n\nexport const remainingBetSlipData =  (remaining) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'REMAINING_BET_SLIP_DATA',\n      payload: remaining\n    });\n  }\n};\n\nexport const deleteBetSlipData =  (betSlipDelete) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'DELETE_BET_SLIP_DATA',\n      payload: betSlipDelete\n    });\n  }\n};\n\nexport const betSlipScreen =  (screen) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'BET_SLIP_SCREEN',\n      payload: screen\n    });\n  }\n};\n\nexport const countBetSlipData =  (count) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'COUNT_BET_SLIP_DATA',\n      payload: count\n    });\n  } \n};\nexport const postWinPlaceBets =  (betData) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'POST_WIN_PLACE',\n      payload: betData\n    });\n  }\n};\n\nexport const allBetSlipData =  (dataAll) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'ALL_BET_SLIP_DATA',\n      payload: dataAll\n    });\n  }\n};\nexport const deleteSingleBet =  (deleteSingle) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'DELETE_SINGLE_BET',\n      payload: deleteSingle\n    });\n  }\n};\nexport const deleteAllBets =  (deleteAll) => {\n  return function (dispatch) {\n    dispatch({\n      type: 'DELETE_All_BET',\n      payload: deleteAll\n    });\n  }\n};","import React from 'react';\nimport { Link} from \"react-router-dom\";\nimport { elastic as Menu } from 'react-burger-menu';\nimport \"./Menu.css\";\n\nconst MenuView=()=> {\n      function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    return (\n      <Menu className=\"icon-hamburger-menu\">\n        <Link exact to=\"/\" className=\"menu-item\">\n        Home</Link>\n        <Link exact to=\"/next-to-go\" className=\"menu-item\">\n        Next To Go</Link>\n        <Link exact to={`/${date}/R`} className=\"menu-item\"\n         >\n        Racing</Link>\n        <Link exact to={`/${date}/G`} className=\"menu-item\"\n         >\n        GreyHound</Link>\n        <Link exact to={`/${date}/H`}  className=\"menu-item\"\n         >\n        Harness</Link>\n      </Menu>\n    );\n}\nexport default MenuView;\n\n","import React from 'react'\nimport \"./Header.css\";\nimport \"./Resp_Header.css\"\nimport { Link} from \"react-router-dom\";\nimport MenuView from \"./Menu\";\nconst Header=() =>{\n    return (\n        <div>\n            <header className=\"page-header\">\n                <div className=\"content-wrapper\">\n                    <div className=\"positioned-left\">\n                        <div className=\"positioned-left\">\n                            <div className=\"toggle-menu-link\">        \n                                <span className=\"hamburger-title\">\n                                    <Link to=\"/\" className=\"title-main\">\n                                        <div id=\"vollie-tagline\">\n                                            Racing, Hub\n                                        </div>\n                                    </Link>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n    )\n}\nexport default Header;\n","import React,{ useState,useEffect,useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport MediaQuery from 'react-responsive'\n\n\nimport { allBetSlipData,fetchPathParams } from \"../../actions\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n      },\n  }));\nconst NextRace = (props)=>{\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    const classes = useStyles();\n    const [nextRace,setnextRace]=useState([]);\n    const [nextRaceGrey,setnextRaceGrey]=useState([]);\n    const [nextRaceHarness,setnextRaceHarness]=useState([]);\n    const [Race,setRace]=useState(true);\n    const [Grey,setGrey]=useState(true);\n    const [Harness,setHarness]=useState(true);\n\n    const [firstTime, setfirstTime] = useState();\n    const [firstNumber, setfirstNumber] = useState();\n    const [fetched, setfetched] = useState(false)\n    useEffect(() => {\n        if (props.next.length>0){\n            {props.next[0].raceStartTime?setfirstTime(props.next[0].raceStartTime):setfirstTime()}\n            {props.next[0].raceNumber?setfirstNumber(props.next[0].raceNumber):setfirstNumber()}\n            setfetched(true)\n        }\n    }, [props.next]);\n\n    const [showLoading, setShowLoading] = useState(false);\n    const [diffTime, setdiffTime] = useState(Date.now()-new Date(\"2020-07-03T05:09:00.000Z\"))\n\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     );\n  \n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n\n    const fetchResources=()=>{\n        {props.next.map(item =>{\n            switch(item.meeting.raceType) {\n                case 'R' :\n                    setnextRace(oldArray => [...oldArray, item]);\n                    break\n                case 'G' :\n                    setnextRaceGrey(oldArray => [...oldArray, item]);\n                    break\n                default:\n                    setnextRaceHarness(oldArray => [...oldArray, item]);\n                    break        \n                };\n        })}\n    };\n    useEffect(()=> {\n        fetchResources(props.next);\n    },[props.next]);\n\n    const duration=(raceStartTime)=>{ \n        var left=(Date.now()-new Date(raceStartTime))-diffTime\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes===0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes===0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n        if (hours===0 && minutes>=5){\n            if (left>0){\n                return (-minutes+'m')\n            }\n            else return(minutes+'m')\n        } \n        if (hours===0 && (minutes<=5||minutes>=-5) \n            && (minutes>0||minutes<0)) {\n                if (left>0) {\n                    if (seconds===0){\n                        return(-minutes+'m')\n                    } else return (-minutes+'m'+seconds+'s')\n                }\n               else {\n                if (seconds===0){\n                    return(minutes+'m')\n                } else return (minutes+'m'+seconds+'s')\n                }\n        }  \n        if (hours===0 && minutes===0) {\n            if (left>0) {\n                return(-seconds+'s')\n            }\n            else return((seconds+'s'))\n        } \n    };\n    \n    const renderTodayTableList=(state,title) =>{\n        return (        \n           (state.map(item => {\n                return(\n                    <>\n                        <MediaQuery query='(min-width: 800px)'>\n                            <Grid item xs ={4} className=\"next-section\">  \n                                <Link className={classes.paper}  className={\n                                    (item.raceStartTime===firstTime\n                                        &&item.raceNumber===firstNumber)?\n                            \"next-item-first\":\"next-item\"}\n                                    to={{\n                                        pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`,\n                                        slot:item.raceNumber, \n                                        place: item.meeting.meetingName,\n                                        code:item.meeting.venueMnemonic,\n                                        raceType:item.meeting.raceType   \n                                    }}\n                                    onClick={()=>{props.fetchPathParams(\n                                        {\n                                            slot:item.raceNumber, \n                                            place: item.meeting.meetingName,\n                                            code:item.meeting.venueMnemonic,\n                                            raceType:item.meeting.raceType    \n                                        }\n                                    )}}\n                                    >                        \n                                    <p>R{item.raceNumber}</p>\n                                    <time>{duration(item.raceStartTime)}</time>    \n                                    <p>{item.meeting.meetingName} ({item.meeting.location})</p>\n                                </Link> \n                            </Grid>\n                        </MediaQuery>  \n                        <MediaQuery query='(max-width: 800px)'>\n                            <Grid item xs ={6} className=\"next-section\">\n                                <Link className={classes.paper}  className={\n                                    (item.raceStartTime===firstTime\n                                        &&item.raceNumber===firstNumber)?\n                            \"next-item-first\":\"next-item\"}\n                                    to={{\n                                        pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`,\n                                        slot:item.raceNumber, \n                                        place: item.meeting.meetingName,\n                                        code:item.meeting.venueMnemonic,\n                                        raceType:item.meeting.raceType   \n                                    }}\n                                    onClick={()=>{props.fetchPathParams(\n                                        {\n                                            slot:item.raceNumber, \n                                            place: item.meeting.meetingName,\n                                            code:item.meeting.venueMnemonic,\n                                            raceType:item.meeting.raceType    \n                                        }\n                                    )}}\n                                    >                        \n                                    <p>R{item.raceNumber}</p>\n                                    <time>{duration(item.raceStartTime)}</time>    \n                                    <p>{item.meeting.meetingName} ({item.meeting.location})</p>\n                                </Link> \n                            </Grid>\n                        </MediaQuery>  \n                    </>                \n            )}\n        ))\n        );\n    };\n    return(\n        <div>\n            <div className=\"next-data\">\n                <h1 onClick={()=>setRace(!Race)}>Racing</h1>\n                <Grid container spacing={3}>\n                    {Race?renderTodayTableList(nextRace.slice(0,6)):\"\"}\n                </Grid>\n                <h1 onClick={()=>setGrey(!Grey)}>GreyHound</h1>\n                <Grid container spacing={3}>\n                    {Grey?renderTodayTableList(nextRaceGrey.slice(0,6)):\"\"}\n                </Grid>\n                <h1 onClick={()=>setHarness(!Harness)}>Harness</h1>\n                <Grid container spacing={3}>\n                    {Harness?renderTodayTableList(nextRaceHarness.slice(0,6)):\"\"}\n                </Grid>\n            </div>\n        </div>\n        );\n}; \n\nconst mapStateToProps=(state)=> {\n    return{ \n        pathParam:state.pathParams\n    }\n}\nexport default connect(mapStateToProps, \n    { \n        fetchPathParams\n    })\n    (NextRace);\n","import React,{ useState,useEffect,useRef } from 'react';\nimport { Link} from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { fetchPathParams} from \"../../actions\";\nimport \"./NextRace.css\";\n\n\nconst NextList = (props)=>{\n  // console.log(props.next)\n      function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now());\n    const [diffTime, setdiffTime] = useState(Date.now()-new Date(\"2020-07-03T05:09:00.000Z\"))\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     );\n  \n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n\n\n\n    const duration=(raceStartTime)=>{\n        var left=(Date.now()-new Date(raceStartTime))-diffTime\n        var delta=Math.abs((left)/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60); \n        if (hours===0 && (minutes>0||minutes<0)){\n            if (left>0) {\n                if (seconds===0){\n                    return(-minutes+'m')\n                } else return (-minutes+'m'+seconds+'s')\n            }\n           else {\n            if (seconds===0){\n                return(minutes+'m')\n            } else return (minutes+'m'+seconds+'s')\n            }\n        }\n        if (hours===0 && minutes===0) {\n            if (left>0){\n                return(-seconds+'s')\n            }\n            return (seconds+'s')\n        }\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes===0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes===0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n    };\n\n\n    const renderToday=(()=>{\n        return (        \n            (props.next.map(item => {\n                                //  console.log(item)\n                                //    console.log(item.raceNumber)\n                                //    console.log(item.meeting.meetingName)\n                                //    console.log(item.meeting.venueMnemonic)\n                                //    console.log(item.meeting.raceType)\n\n                 return(\n                     <div className=\"next-to-go-bar-race\">\n                        <Link className=\"next-to-go-bar-race-link\" \n                        to={{\n                            pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`,\n                            slot:item.raceNumber, \n                            place: item.meeting.meetingName,\n                            code:item.meeting.venueMnemonic,\n                            raceType:item.meeting.raceType                            \n                        }}\n                        onClick={()=>{props.fetchPathParams(\n                            {\n                                slot:item.raceNumber, \n                                place: item.meeting.meetingName,\n                                code:item.meeting.venueMnemonic,\n                                raceType:item.meeting.raceType   \n                            }\n                        )}}\n                        >\n                            <div className=\"next-to-go-bar-race-info\">\n                                <span className=\"next-to-go-bar-race-name\">\n                                    {item.meeting.meetingName} ({item.meeting.location}) - R{item.raceNumber}\n                                </span>\n                            </div>\n                            <time className=\n                            {(Date.now()-new Date(item.raceStartTime)>-5*60000)?\n                                \"next-to-go-bar-race-close-to-start\":\n                                \"next-to-go-bar-time-to-start\"}>\n                                {duration(item.raceStartTime)}\n                            </time>      \n                        </Link>\n                     </div>\n                )})\n         ));\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n          width: '100%',\n          backgroundColor: theme.palette.background.paper,\n        },\n      }));\n    \n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n\n    return(\n        <div>\n            <div className=\"next-to-go-bar-race-list\">\n                <div className={classes.root}>\n                    <AppBar position=\"static\" color=\"default\">\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                        aria-label=\"scrollable auto tabs example\"\n                        >\n                            {props.next?renderToday(props):\"\"}\n                        </Tabs>\n                    </AppBar>\n                </div>\n            </div>\n        </div>\n        \n        );\n}; \nconst mapStateToProps=(state)=> {\n    return{ \n        pathParam:state.pathParams\n    }\n}\nexport default connect(mapStateToProps, { fetchPathParams } )(NextList);\n\n\n","import React, {useState,useEffect,useRe} from 'react';\nimport { connect } from 'react-redux';\n\nimport _, { isInteger, indexOf, isObject, isArray } from \"lodash\"\nimport \"./BetSlip.css\"\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport { \n    addBetSlipData,\n    allBetSlipData,\n    deleteBetSlipData,\n    remainingBetSlipData,\n    betSlipScreen,\n    postWinPlaceBets,\n    deleteSingleBet,\n    deleteAllBets\n} from \"../../actions\";\n\nconst BetSlipHome=(props) =>{\n    const [poolFinalList, setpoolFinalList] = useState([]);\n    const [mobileRemaining, setmobileRemaining] = useState([]);\n    const [desktopRemin, setdesktopRemin] = useState([]);\n    const [deletedBets, setdeletedBets] = useState([]);\n    const [RemainingBets, setRemainingBets] = useState();\n    const [finalRemainingBets, setfinalRemainingBets] = useState([]);\n    const [placeWinPlaceBetList, setplaceWinPlaceBetList] = useState([])\n    const [showCurrency, setshowCurrency] = useState(false)\n    const [BetSlipDoneJson, setBetSlipDoneJson] = useState();\n    const [deleted,setdeleted]=useState(false)\n    const [startSlip, setstartSlip] = useState(false)\n    const [WinMoney, setWinMoney] = useState(null);\n    const [PlaceMoney, setPlaceMoney] = useState(null);\n    const [typeBet, settypeBet] = useState('');\n    const [localRemaining, setlocalRemaining] = useState([]);\n\n    // useEffect(() => {\n    //     const data =window.localStorage.getItem('betSlip')\n    //     if (data) {\n    //         setlocalRemaining(JSON.parse(data))\n    //         // props.remainingBetSlipData(JSON.parse(data))\n    //     }\n    // }, [])\n\n    // useEffect(() => {\n    //     if(finalRemainingBets[0] ) {\n    //         if(finalRemainingBets[0].name) {\n    //             localStorage.setItem('betSlip',JSON.stringify(finalRemainingBets))\n    //         }\n\n    //     }\n    // }, [finalRemainingBets]);\n\n    // useEffect(() => {\n    //     if( window.innerWidth<980) {\n    //         console.log(finalRemainingBets)\n    //         props.remainingBetSlipData(finalRemainingBets);\n    //         localStorage.setItem('betSlip',JSON.stringify(finalRemainingBets));\n    //     }\n\n    // }, [finalRemainingBets]);\n\n    useEffect(() => {\n        console.log(props.allBetSlip)\n        var users;\n        props.postWinPlaceBets([]);\n        if(window.innerWidth>980 && performance.navigation.type >=1 ) {\n            var users=props.allBetSlip;\n            var rem=props.remainingBetSlip.length<1?JSON.parse(window.localStorage.getItem('betSlip')):props.remainingBetSlip\n            if(props.screenStatus) {\n                users = [users, ...rem];\n            } else {users=[...rem]}\n        }\n        if(window.innerWidth>980 && performance.navigation.type == 0 ) {\n            var users=props.allBetSlip;\n            var rem=props.remainingBetSlip.length<1?JSON.parse(window.localStorage.getItem('betSlip')):props.remainingBetSlip\n            if(props.screenStatus) {\n                users = [users, ...rem];\n            } else {users=[...rem]}\n        }\n        if (performance.navigation.type >= 1 && window.innerWidth<980) {\n            console.log(performance.navigation.type,'entered',props.remainingBetSlip,JSON.parse(window.localStorage.getItem('betSlip')))\n\n            props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n            users=JSON.parse(window.localStorage.getItem('betSlip'))\n        } \n        if(performance.navigation.type == 0 && window.innerWidth<980) {\n            console.log(performance.navigation.type,'enteredsec',props.remainingBetSlip,JSON.parse(window.localStorage.getItem('betSlip')))\n\n            var users=props.remainingBetSlip;\n        }\n        if(props.remainingBetSlip) {\n            users=Object.values(users)\n        };\n        // var users_quinella=users.filter(e1=> { return e1.quinella===null });\n        // var users_win=users.filter(e1=> { return e1.win===null });\n        console.log(users)\n        var grouped = _.reduce(users, (result, user) => {\n            if(user){\n                    (result[user.name] || (result[user.name] = [])).push(user);  \n                    return result;\n            }    \n        }, {});\n        var poolList=[];\n        if(grouped) {\n            if(Object.keys(grouped)){\n                Object.keys(grouped).map(poolname=>{\n                    if(poolname!=\"undefined\") {\n                        var groupedRunners = _.reduce(grouped[poolname], (result, user) => {\n                            if(user){\n                                    (result[user.name] || (result[user.name] = [])).push(user.runners);  \n                                    \n                                    return (Object.values(result).reduce(\n                                        function(accumulator, currentValue) {\n                                          return accumulator.concat(currentValue)\n                                        },\n                                        []\n                                      ));        \n                            }    \n                        }, {});\n                        var groupedRunnersNo=groupedRunners.reduce(function (allNames, name) { \n                            if (name in allNames) {\n                              allNames[name]++\n                            }\n                            else {\n                              allNames[name] = 1\n                            }\n                            return(allNames)\n                          }, {})\n                        var itemList=[];\n                        var winList=null;\n                        var placeList=null;\n                        for (var i=0;i<Object.keys(groupedRunnersNo).length;i=i+1){\n                            if(Object.values(groupedRunnersNo)[i]%2!=0) {\n                                if(isInteger(parseInt(Object.keys(groupedRunnersNo)[i]))) {\n                                    var pos=(_.findIndex(users, {runners: parseInt(Object.keys(groupedRunnersNo)[i])}));      \n                                    itemList.push(users[pos].runners)\n                                    winList=grouped[poolname][grouped[poolname].length-1].win\n                                    placeList=grouped[poolname][grouped[poolname].length-1].place\n                                } \n                            }\n                            }\n                        if (itemList.length){\n                            var itemPool={\"name\":poolname,\"runners\":itemList, \"win\": winList ,\"place\": placeList}\n                        }\n                        if(poolFinalList){\n                            poolList.push(itemPool)\n                        } else {\n                            poolList=itemPool\n                        }\n                    }     \n                })\n                setRemainingBets(poolList);\n                setstartSlip(true)\n            }\n        };\n\n\n\n\n\n        // var grouped = _.reduce(users_quinella, (result, user) => {\n        //     if(user){\n        //             (result[user.name] || (result[user.name] = [])).push(user);  \n        //             return result;\n        //     }    \n        // }, {});\n        // var poolList=[];\n        // if(grouped) {\n        //     if(Object.keys(grouped)){\n        //         Object.keys(grouped).map(poolname=>{\n        //             if(poolname!=\"undefined\") {\n        //                 var groupedRunners = _.reduce(grouped[poolname], (result, user) => {\n        //                     if(user){\n        //                             (result[user.name] || (result[user.name] = [])).push(user.runners);  \n                                    \n        //                             return (Object.values(result).reduce(\n        //                                 function(accumulator, currentValue) {\n        //                                   return accumulator.concat(currentValue)\n        //                                 },\n        //                                 []\n        //                               ));        \n        //                     }    \n        //                 }, {});\n        //                 var groupedRunnersNo=groupedRunners.reduce(function (allNames, name) { \n        //                     if (name in allNames) {\n        //                       allNames[name]++\n        //                     }\n        //                     else {\n        //                       allNames[name] = 1\n        //                     }\n        //                     return(allNames)\n        //                   }, {})\n        //                 var itemList=[];\n        //                 var quinellaList=null;\n        //                 // var placeList=null;\n        //                 for (var i=0;i<Object.keys(groupedRunnersNo).length;i=i+1){\n        //                     if(Object.values(groupedRunnersNo)[i]%2!=0) {\n        //                         if(isInteger(parseInt(Object.keys(groupedRunnersNo)[i]))) {\n        //                             var pos=(_.findIndex(users, {runners: parseInt(Object.keys(groupedRunnersNo)[i])}));      \n        //                             itemList.push(users[pos].runners)\n        //                             quinellaList=grouped[poolname][grouped[poolname].length-1].quinella\n        //                         } \n        //                     }\n        //                     }\n        //                 if (itemList.length){\n        //                     var itemPool={\"name\":poolname,\"runners\":itemList, \"boxed\": quinellaList }\n        //                 }\n        //                 if(poolFinalList){\n        //                     poolList.push(itemPool)\n        //                 } else {\n        //                     poolList=itemPool\n        //                 }\n        //             }     \n        //         })\n        //         setRemainingBets(oldArray => [...oldArray, ...poolList]); \n        //         setstartSlip(true)\n        //     }\n        // };\n    }, [props.allBetSlip]);\n\n    // useEffect(() => {\n    //     props.postWinPlaceBets([]);\n    //     console.log(props.betSlipInd);\n    //     setdesktopRemin(props.betSlipInd);\n    //     setstartSlip(true)\n    // }, [props.betSlipInd]);\n\n    \n    const deleteSingleBetfun=(item)=>{\n        // if(window.innerWidth<980) {\n            if (RemainingBets.length==1){\n                setstartSlip(false)\n                setRemainingBets([])\n                localStorage.setItem('betSlip',JSON.stringify([]));\n            }\n            var obje=RemainingBets.filter(e1=> { return e1 != item })\n            setRemainingBets(obje)\n            localStorage.setItem('betSlip',JSON.stringify(obje))\n            props.deleteSingleBet([])\n            if(item.runners.length>1) {\n                item.runners.map(runnnerInd=>{\n                    setdeletedBets(oldArray => [...oldArray, {\"name\":item.name,\"runners\":parseInt(runnnerInd),\"win\": item.win ,\"place\": item.place}]); \n                })\n            } else {\n                setdeletedBets(oldArray => [...oldArray, {\"name\":item.name,\"runners\":parseInt(item.runners),\"win\": item.win ,\"place\": item.place}]);\n            }\n        // }\n\n    };\n\n    const handleDeleteAll=()=>{\n        // if(window.innerWidth<980) {\n            if (RemainingBets.length==1){\n                setstartSlip(false)\n                setRemainingBets([])\n                localStorage.setItem('betSlip',JSON.stringify([]))\n            }\n            RemainingBets.map(items=>{\n                if(items) {\n                    if(items.runners.length>1) {\n                        items.runners.map(runnnerInd=>{\n                            setdeletedBets(oldArray => [...oldArray, \n                                {\"name\":items.name,\"runners\":runnnerInd,\n                                \"win\": items.win ,\"place\": items.place}]);\n                        })\n                    } else setdeletedBets(oldArray => [...oldArray, items]);   \n                }\n             })\n            setRemainingBets([]);\n            localStorage.setItem('betSlip',JSON.stringify([]))\n            setshowCurrency(false);\n        // }\n\n    };\n\n    useEffect(() => {\n        if (RemainingBets) {\n            setfinalRemainingBets([])\n            RemainingBets.map(items=>{\n                if(items) {\n                    if(items.runners.length>1) {\n                        items.runners.map(runnnerInd=>{\n                            setfinalRemainingBets(oldArray => [...oldArray, \n                                {\"name\":items.name,\"runners\":runnnerInd,\n                                \"win\": items.win ,\"place\": items.place}]);\n                        })\n                    } \n                    else \n                    {   \n                        setfinalRemainingBets(oldArray => [...oldArray,\n                            {\"name\":items.name,\"runners\":items.runners[0],\n                            \"win\": items.win ,\"place\": items.place}])\n                    }\n                }\n            })\n        }\n\n    }, [RemainingBets]);\n\n    useEffect(() => {\n        if (finalRemainingBets) {\n            setplaceWinPlaceBetList([]);\n            if(window.innerWidth) {\n                localStorage.setItem('betSlip',JSON.stringify(finalRemainingBets))\n                props.remainingBetSlipData(finalRemainingBets)\n            }\n            finalRemainingBets.map(items=>{\n                if(items) {\n                    if( items.win>0)  {\n                        setplaceWinPlaceBetList(oldArray => [...oldArray,\n                            {\n                                \"bet_fh\": \"tk_integ_\"+Date.now()+\"_\"+items.name,\n                                \"bet_pool_fh\": items.name+'w',\n                                \"stake_cents\": items.win,\n                                \"combinations\":[\n                                {\n                                \"place\":1,\n                                \"runners\":[items.runners]\n                                }\n                                ]\n                            }                          \n                        ])\n                        \n                    }\n                    if( items.place>0)  {\n                        setplaceWinPlaceBetList(oldArray => [...oldArray,\n                            {\n                                \"bet_fh\": \"tk_integ_\"+Date.now()+\"_\"+items.name,\n                                \"bet_pool_fh\": items.name+\"p\",\n                                \"stake_cents\": items.place,\n                                \"combinations\":[\n                                {\n                                \"place\":2,\n                                \"runners\":[items.runners]\n                                }\n                                ]\n                            }                           \n                        ])\n                    }\n\n                }\n            })\n        }\n    }, [finalRemainingBets]);\n\n\n    // useEffect(() => {\n    //     if(window.innerWidth<980) {\n    //         setRemainingBets(mobileRemaining)\n    //     } else {\n    //         setRemainingBets(desktopRemin)\n    //     }\n    // }, [mobileRemaining,desktopRemin]);\n\n\n    // useEffect(() => {\n    //     if(props.deleteSingleBetData[0]) {\n    //             console.log(finalRemainingBets)\n    //             props.remainingBetSlipData(finalRemainingBets)\n    //             localStorage.setItem('betSlip',JSON.stringify(finalRemainingBets))\n    //      }\n    // }, [props.deleteSingleBetData]);\n    \n    const betSlipHeader=()=>{\n        return(\n            <SimpleBar style={{ maxHeight: '100vh' }}>\n            <header className=\"side-panel-title-bar\">\n                <toggle-button className=\"betslip-toggle\">\n                    <div className=\"toggle-button-grouped\">\n                        <button className=\"toggle-button selected\">\n                            Bet Slip\n                        </button>\n                        <button className=\"toggle-button\">\n                            Pending Bets\n                        </button>\n                    </div>\n                </toggle-button>\n            </header>\n            </SimpleBar>\n        )\n    };\n\n\n    const betSlipPlaceInput=(item)=>{\n        \n        var pos=(_.findIndex(RemainingBets, item));\n        const updateFieldChanged = (e,item) => {\n            e.preventDefault();\n            var pos=(_.findIndex(RemainingBets, item))\n            var newArr = [...RemainingBets]; \n            newArr[pos][e.target.name] = parseInt(e.target.value); \n            newArr[pos][e.target.name]=newArr[pos][e.target.name]\n            setRemainingBets(newArr); \n        }\n        return(\n            <>\n                <form className=\"common-form bet-card-form ng-valid ng-dirty ng-valid-parse\">\n                    <ul className=\"\">\n                        <li className=\"\">\n                            <div className=\"bet-card-info\">\n                                <label className=\"bet-info-value\">\n                                    Win\n                                </label>\n                                <div className=\"bet-card-input\">\n                                    <stake-input className=\"\">\n                                        <span className=\"stake-input\">\n                                            <span className=\"currency\">\n                                                $\n                                            </span>\n                                            <input \n                                                type=\"number\"\n                                                onClick={()=>{\n                                                    settypeBet('Win')\n                                                }} \n                                                key={RemainingBets[pos]['name']+'win'}\n                                                name='win'\n                                                placeholder={null}\n                                                value={RemainingBets[pos]['win']}\n                                                min={0}\n                                                onChange={(e)=>updateFieldChanged(e,item)} \n                                                className=\"common-textfield ng-valid stake-input-has-focus ng-touched ng-not-empty ng-dirty ng-valid-parse\">\n                                            </input>\n                                        </span>\n                                    </stake-input>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"\">\n                            <div className=\"bet-card-info\">\n                                <label className=\"bet-info-value\">\n                                    Place\n                                </label>\n                                <div className=\"bet-card-input\">\n                                    <stake-input className=\"\">\n                                        <span className=\"stake-input\">\n                                            <span className=\"currency\">\n                                                $\n                                            </span>\n                                            <input \n                                                type=\"number\"\n                                                onClick={()=>{\n                                                    settypeBet('Place')\n                                                }}\n                                                name='place'\n                                                placeholder={null}\n                                                key={RemainingBets[pos]['name']+'place'}\n                                                onChange={(e)=>updateFieldChanged(e,item)} \n                                                value={RemainingBets[pos]['place']}\n                                                min={0}\n                                                className=\"common-textfield ng-valid stake-input-has-focus ng-touched ng-not-empty ng-dirty ng-valid-parse\">\n                                            </input>\n                                        </span>\n                                    </stake-input>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"\">\n                            <div className=\"bet-card-info\">\n                                <bet-cost className=\"\">\n                                    <label className=\"bet-info-label\">\n                                        Bet Cost\n                                    </label>\n                                    <span className=\"bet-info-value\">\n                                        ${(isNaN(RemainingBets[pos]['win'])&&isNaN(RemainingBets[pos]['place']))?0:\n                                        isNaN(RemainingBets[pos]['win'])?item.runners.length*(RemainingBets[pos]['place']):\n                                        isNaN(RemainingBets[pos]['place'])?item.runners.length*(RemainingBets[pos]['win']):\n                                        item.runners.length*(RemainingBets[pos]['win']+RemainingBets[pos]['place'])}\n                                    </span>\n                                </bet-cost>\n                            </div>\n                        </li>\n                    </ul>\n                </form>\n            </>\n        )\n    };\n    const betSlipBetDetail =(WinMoney)=>{\n        return(\n            <>\n            {RemainingBets?(startSlip)?RemainingBets.map(item=>{\n                return(\n                    item?item.name?\n                        <div className=\"card\">\n                        <div className=\"\">\n                            <parimutuel className=\"\">\n                                <section className=\"bet-card\">\n                                    <header className=\"bet-card-header\">\n                                        <h1 className=\"bet-card-title\">\n                                            Win/Place\n                                        </h1>\n                                        <span className=\"bet-card-type tote\">\n                                            TOTE\n                                        </span>\n                                    </header>\n                                    <div className=\"bet-card-body\">\n                                        <div className=\"bet-additional-info\">\n                                            <ul className=\"bet-card-race-information\">\n                                                <li>\n                                                    {item.name} \n                                                </li>\n                                            </ul>\n                                            <ul className=\"bet-card-selections\">\n                                                <li>\n                                                    <p className=\"bet-card-label\">\n                                                        Selections\n                                                    </p>\n                                                    <span className=\"bet-card-selection\">\n                                                        {item.runners.map(no=>{\n                                                            return(\n                                                                <>\n                                                                <span>\n                                                                    {no}\n                                                                </span>\n                                                                <span className=\"runner-seperator\">\n                                                                    {\" , \"}\n                                                                </span>\n                                                                </>\n                                                            )\n                                                        })}\n                                                    </span>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        {betSlipPlaceInput(item)}\n                                    </div>\n                                    <footer className=\"bet-card-footer\">\n                                        <div className=\"bet-card-footer-actions\">\n                                            <p className=\"bet-status\">\n                                                {item.win +item.place ==0?\"Incomplete Bet\":\"\"}\n                                            </p>                                           \n                                            <button className=\"bet-card-remove\">\n                                                <i onClick={()=>{props.deleteSingleBet(item)\n                                                            {deleteSingleBetfun(item)}\n                                                            setdeleted(true)\n                                                            setshowCurrency(false)}}\n                                                className=\"icon-remove\" style={{height:'5rem'}}>\n                                                    <RiDeleteBin6Line/>\n                                                </i>\n                                            </button>\n                                        </div>\n                                    </footer>\n                                </section>\n                            </parimutuel>\n                        </div>\n                    </div>\n                    :\"\":\"\"\n                )\n            })\n        :\"\":\"\"}\n        </>\n        )\n    }\n    const currencyOpen=(WinMoney,PlaceMoney,BetSlipDoneJson,typeBet,ManualPlace,ManualWin)=>{\n        return(\n            <div className=\"bet-builder-actions-wrapper\">\n                <footer className=\"bet-builder-footer\">\n                    <ul className=\"summary-list\">\n                        <li className=\"\">\n                            <h1 className=\"\">\n                                Number of bets\n                            </h1>\n                            <p className=\"bet-builder-footer-key-info\">\n                                <span className=\"bet-summary-info\">\n                                    Single\n                                </span>\n                            </p>\n                        </li>\n                        <li  className=\"\">\n                            <h1  className=\"\">\n                                Total cost\n                            </h1>\n                            <p  className=\"bet-builder-footer-key-info bet-builder-total-bets-cost\">\n                            ${_.sumBy(finalRemainingBets, 'win')+_.sumBy(finalRemainingBets, 'place')}\n                            </p>\n                        </li>\n                    </ul>\n                    <menu  className=\"bet-summary-menu\">\n                        <button  onClick={()=>{\n                            handleDeleteAll()\n                        }\n                        }\n                        className=\"bet-builder-button common-button change-bet-button builder-bet-clear-all\">\n                            Delete All\n                        </button>\n                        <button  onClick={()=>{\n                            props.postWinPlaceBets(placeWinPlaceBetList)\n                            setRemainingBets([])\n                            props.deleteAllBets(true)\n                        }}\n                        className=\"bet-builder-button common-button submit-bet-button bet-builder-bet-now-button\">\n                            Bet Now\n                        </button>\n                    </menu>\n                </footer>\n            </div>\n        )\n    };\n    return (\n        <div className=\"side-panel toggleable\">\n            <div className=\"inner-side-panel pane loaded\">\n                {betSlipHeader()}\n                <div className=\"bet-builder bet-builder-has-bet\">\n                    <div className=\"bet-builder-state build\">\n                        <div className=\"inner-bet-builder-state\">\n                            <div className={showCurrency?\"side-panel-messages-wrapper\":\"side-panel-messages-wrapper-closed\"}>\n                                <div className=\"bet-builder-bet-slip\">\n                                    <div className=\"bet-cards-wrapper\">\n                                        {betSlipBetDetail(WinMoney, PlaceMoney,BetSlipDoneJson)}\n                                    </div>\n                                </div>\n                            </div>\n                            {currencyOpen(WinMoney, PlaceMoney,BetSlipDoneJson,typeBet)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps=(state)=> {\n    \n    return{ \n        betSlipInd:state.betSlipInd,\n        allBetSlip:state.allBetSlip,\n        deleteBetSlip:state.deleteBetSlip,\n        remainingBetSlip:state.remainingBetSlip,\n        screenStatus:state.screenStatus,\n        postWinPlace:state.postWinPlace,\n        deleteSingleBetData:state.deleteSingleBet,\n        deleteAllBetData:state.deleteAllBet\n    }\n}\nexport default connect(mapStateToProps, \n    { \n        addBetSlipData,\n        allBetSlipData,\n        deleteBetSlipData,\n        remainingBetSlipData,\n        betSlipScreen,\n        postWinPlaceBets,\n        deleteSingleBet,\n        deleteAllBets\n    })\n    (BetSlipHome);","import React from 'react'\nimport \"./Resp_Header.css\";\nimport { Link} from \"react-router-dom\";\n\n\nconst RespHeader=() =>{\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    return (\n        <header className=\"main-header\">\n            <div id=\"site-heading\">\n                <Link to=\"/\" className=\"title-main\">\n                    <div id=\"vollie-tagline\">\n                        Racing, Hub\n                    </div>\n                </Link>\n            </div>\n            <nav id=\"header-menu\">\n                <ul className=\"top-menu\">\n                    <li className=\"yump-magic-hover\">\n                        <Link to=\"/\" className=\"menu-item-link\">\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to=\"/next-to-go\" className=\"menu-item-link\">\n                            Next To Go\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to={`/${date}/R`} className=\"menu-item-link\">\n                            Racing\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to={`/${date}/G`} className=\"menu-item-link\">\n                        GreyHound\n                        </Link>\n                    </li>\n                    <li className=\"yump-magic-hover\">\n                        <Link to={`/${date}/H`} className=\"menu-item-link\">\n                        Harness\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\nexport default RespHeader;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace,addBetSlipData,betSlipScreen,remainingBetSlipData } from \"../../actions\";\nimport MenuView from \"../Nav/Menu\";\n\nimport Header from '../Nav/Header';\nimport NextRace from '../Next/NextRace';\nimport NextList from '../Next/NextList';\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\nimport \"../Next/NextRace.css\"\nconst NextScreen=(props) =>{\n    useEffect(() => {\n        props.fetchNextRace();\n      }, []);\n    props.betSlipScreen(false)\n    const [firstTime, setfirstTime] = useState();\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(() => {\n        if (performance.navigation.type === 1 && window.innerWidth<980) {\n            console.log(JSON.parse(window.localStorage.getItem('betSlip')))\n\n            props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n        }\n        // if (performance.navigation.type === 1 && window.innerWidth>980) {\n        //     console.log(JSON.parse(window.localStorage.getItem('betSlip')))\n        //     props.addBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n        // }\n    }, [performance.navigation.type]);\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    useEffect(() => {\n        if (props.next.length>0){\n            {props.next[0].raceStartTime?setfirstTime(Date.now()-new Date(props.next[0].raceStartTime)):setfirstTime()}\n        }\n    }, [props.next]);\n    useEffect(\n        () => {\n          timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n          return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n        },\n        [showLoading]\n      );\n   \n      setTimeout(()=>{\n         setShowLoading(false)\n         return () => {\n             clearInterval(timerToClearSomewhere.current)\n           }\n      },firstTime);\n    return (\n            <>\n                <MediaQuery query='(min-width: 980px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n                    <ui-view>\n                        <RespHeader/>\n                        <NextList next={props.next}/>\n                        <main className=\"page-content\">\n                            <div className=\"left-column\">\n                                <ui-view>  \n                                    <nav className=\"menuItems\">\n                                        <NextRace next={props.next}/>\n                                    </nav>\n                                </ui-view>\n                            </div>\n                            <BetSlipHome/>\n                        </main>\n                    </ui-view>  \n                    </SimpleBar>        \n                </MediaQuery>\n                <MediaQuery query='(max-width: 980px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n                <MenuView/>\n                    <Header/>\n                    <main className=\"page-items\">\n                        <NextList next={props.next}/>\n                        <NextRace next={props.next}/>\n                        <Link to={`/${date}/betSlip`}\n                        id=\"mobile-betSlip-button\">\n                            <span>\n                                B-S\n                            </span>\n                        </Link> \n                    </main>\n                    </SimpleBar>\n                </MediaQuery>\n            </>\n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n        next:state.next,\n        screenStatus:state.screenStatus,\n        remainingBetSlip:state.remainingBetSlip,\n        betSlipInd:state.betSlipInd,\n    }\n}\nexport default connect(mapStateToProps, { \n    fetchNextRace,\n    betSlipScreen,\n    remainingBetSlipData,\n    addBetSlipData\n } )(NextScreen);","import React,{ useState,useEffect,useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport \"./TodayDetails.css\";\nimport { Link} from \"react-router-dom\";\nimport { fetchPathParams} from \"../../actions\";\n\n\nconst TodayRacingDetails=(props)=> {\n    const [diffTime, setdiffTime] = useState(Date.now()-new Date(\"2020-07-03T05:09:00.000Z\"))\n\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        return [year, month, day].join('-');\n    }\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n    const date=formatDate(Date.now())\n    const duration=(raceStartTime)=>{ \n        var left=(Date.now()-new Date(raceStartTime))-diffTime\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes===0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes===0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n        if (hours===0 && minutes>=5){\n            if (left>0){\n                return (-minutes+'m')\n            }\n            else return(minutes+'m')\n        } \n        if (hours===0 && (minutes<=5||minutes>=-5) \n            && (minutes>0||minutes<0)) {\n                if (left>0) {\n                    if (seconds===0){\n                        return(-minutes+'m')\n                    } else return (-minutes+'m'+seconds+'s')\n                }\n               else {\n                if (seconds===0){\n                    return(minutes+'m')\n                } else return (minutes+'m'+seconds+'s')\n                }\n        }  \n        if (hours===0 && minutes===0) {\n            if (left>0) {\n                return(-seconds+'s')\n            }\n            else return((seconds+'s'))\n        } \n    };\n    const startTime=(st)=>{\n        var current=new Date(st);\n        var left=(Date.now()-new Date(st))-diffTime\n        left=Date.now()-left+10*60*60*1000\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (minutes<9) {\n         return (hours+\":0\"+minutes)\n        }\n        else return (hours+\":\"+minutes)\n    }\n    const racingSlots=()=>{ return (\n            (props.todayRacing.map(item => {{ \n                    return(\n                        <div className=\"table-item-row\">\n                            {item.races.map(items=>{\n                                // console.log(items,item)\n                                return( \n                                    <Link to={{\n                                        pathname:`/${date}/${item.meetingName}/${item.venueMnemonic}/${item.raceType}/${items.raceNumber}/Win`,\n                                        slot:items.raceNumber, \n                                        place: item.meetingName,\n                                        code:item.venueMnemonic,\n                                        raceType:item.raceType   \n                                }} \n                                onClick={()=>{props.fetchPathParams(\n                                    {\n                                        slot:items.raceNumber, \n                                        place: item.meetingName,\n                                        code:item.venueMnemonic,\n                                        raceType:item.raceType   \n                                    }\n                                )}}\n                                    className='table-rem-row'>\n                                        <div className='table-rem-row'\n                                            id={item.Location}>\n                                            <div \n                                            className={(items.raceStatus!='Normal')?'table-item':\n                                            (-(Date.now()-new Date(items.raceStartTime)-diffTime)<60000\n                                            &&\n                                            -(Date.now()-new Date(items.raceStartTime)-diffTime)>-60000)?\n                                                \"table-item-open-color\":\n                                            'table-item-open'}>\n                                                <p className=\"table-item-slot\">R{items.raceNumber}</p>\n                                                <p className=\"table-item-time\">\n                                                    {startTime(items.raceStartTime)}   \n                                                </p>\n                                                <p className=\"table-item-results\">\n                                                    {Array.isArray(items.results) ?items.results.length>0?items.results.map(result=>{\n                                                        return(\n                                                            <>{result+\" \"}\n                                                            </>\n                                                        )\n                                                    }):duration(items.raceStartTime):duration(items.raceStartTime)}\n                                                </p>\n                                            </div>\n                                        </div>  \n                                    </Link>\n                                )\n                            })}\n                        </div>\n                    )\n                // }          \n    }})))};\n    const renderTodayRacingDetail=(()=>{\n        return (   \n            <div class=\"table\">\n                <div className=\"places-list\">\n                    {props.todayRacing.map(item=>{\n                        return(\n                            <div className=\"places-list-item\">\n                                <p>{item.meetingName}</p>\n                                <p>({item.location})</p>\n                            </div>\n                        )\n                    })}\n                </div>\n                <div className=\"today-list\">\n                    {racingSlots()}\n                </div>\n            </div>\n         );\n    });\n    return (\n        <div>\n            {renderTodayRacingDetail()}\n        </div>\n    )\n};\nconst mapStateToProps=(state)=> {\n    return{ \n        pathParam:state.pathParams\n    }\n}\nexport default connect(mapStateToProps, { fetchPathParams } )(TodayRacingDetails);\n\n","import React,{useState,useEffect,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport { Link} from \"react-router-dom\";\nimport { fetchNextRace,\n    fetchTodayRacing} from \"../../actions\";\nimport \"./TodayDetails.css\"\nimport TodayRacingDetails from  \"./TodayRacingDetails\";\n\nconst TodayDetails = (props,ownProps)=>{\n    // console.log(props)\n        function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    const [todayData, settodayData] = useState([])\n    useEffect(() => {\n        if(props.todayRacing) {\n            var newArray=props.todayRacing.filter(function (el) {\n                return el.raceType ===props.detail\n              });\n            settodayData(newArray)\n        }\n    }, [props])\n    useEffect(() => {\n        props.fetchNextRace();\n      }, []);\n    useEffect(() => {\n    }, [todayData])\n    \n    const [fetchToday,setfetchToday]=useState(props.detail)\n    const fetchTodayRaceInfo=(fetchToday)=> {\n        props.fetchTodayRacing(fetchToday);\n    }\n    useEffect(() => {\n        {fetchTodayRaceInfo(fetchToday)}; // this will fire on every change :(\n    }, [fetchToday]);\n\n    \n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n\n\n    const racingInfo=(props)=>{\n        return(\n            <TodayRacingDetails todayRacing={props}/>\n        )\n    }\n    return(\n        <div>\n            <div className=\"today-details\">\n                <div className=\"date-button\">\n                    <div className=\"category-bar\">\n                        <div className=\"button-bar\">\n                            <Link to={`/${date}/R`} className={props.detail==='R'?\"category-button-active\":\"category-button\"}>\n                                Racing\n                            </Link>\n                            <Link to={`/${date}/G`} className={props.detail==='G'?\"category-button-active\":\"category-button\"}>\n                                GreyHound\n                            </Link>\n                            <Link to={`/${date}/H`} className={props.detail==='H'?\"category-button-active\":\"category-button\"}>\n                                Harness\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {racingInfo(todayData)}\n                </div>\n            </div>\n        </div>\n        );\n}; \n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n        next:state.next,\n        todayRacing:state.todayRacing,\n        detail:ownProps.detail\n    }\n}\nexport default connect(mapStateToProps, { \n    fetchNextRace,fetchTodayRacing} \n    )(TodayDetails);","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace,allBetSlipData,betSlipScreen,remainingBetSlipData } from \"../../actions\";\nimport MenuView from \"../Nav/Menu\";\n\nimport Header from '../Nav/Header'\nimport TodayDetails from '../Today/TodayDetails'\nimport NextList from '../Next/NextList'\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\n\nconst TodayR=(props)=> {\n  useEffect(() => {\n    props.fetchNextRace();\n  }, []);\n    props.betSlipScreen(false)\n\n    useEffect(() => {\n      if (performance.navigation.type === 1) {\n          props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n      }\n  }, [performance.navigation.type]);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n\n        function formatDate(date) {\n          var d = new Date(date),\n              month = '' + (d.getMonth() + 1),\n              day = '' + d.getDate(),\n              year = d.getFullYear();\n      \n          if (month.length < 2) \n              month = '0' + month;\n          if (day.length < 2) \n              day = '0' + day;\n      \n          return [year, month, day].join('-');\n      }\n  \n      const date=formatDate(Date.now())\n    return (\n        <>\n          <MediaQuery query='(min-width: 980px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n            <ui-view>\n                <RespHeader/>\n                <NextList next={props.next}/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                              <TodayDetails detail='R'/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>        \n            </SimpleBar> \n          </MediaQuery>\n          <MediaQuery query='(max-width: 980px)'>\n            <SimpleBar style={{ maxHeight: '100vh' }}>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <TodayDetails detail='R'/>\n                  <Link to={`/${date}/betSlip`}\n                  id=\"mobile-betSlip-button\">\n                      <span>\n                          B-S\n                      </span>\n                  </Link> \n            </SimpleBar>\n          </MediaQuery>\n      </> \n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n      next:state.next,\n      allBetSlip:state.allBetSlip,\n      remainingBetSlip:state.remainingBetSlip,\n      screenStatus:state.screenStatus,\n    }\n}\nexport default connect(mapStateToProps, { \n  fetchNextRace,\n  allBetSlipData,\n  betSlipScreen,\n  remainingBetSlipData\n} )(TodayR);\n","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport { fetchNextRace,allBetSlipData,betSlipScreen,remainingBetSlipData } from \"../../actions\";\n\nimport MenuView from \"../Nav/Menu\";\n\nimport Header from '../Nav/Header'\nimport TodayDetails from '../Today/TodayDetails'\nimport NextList from '../Next/NextList'\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\n\nconst TodayG=(props)=> {\n    useEffect(() => {\n      props.fetchNextRace();\n    }, [])\n    \n    props.betSlipScreen(false)\n    useEffect(() => {\n      if (performance.navigation.type === 1) {\n          props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n      }\n  }, [performance.navigation.type]);\n  function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    return (\n        <>\n          <MediaQuery query='(min-width: 980px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n            <ui-view>\n                <RespHeader/>\n                <NextList next={props.next}/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                              <TodayDetails detail='G'/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>    \n            </SimpleBar>     \n          </MediaQuery>\n          <MediaQuery query='(max-width: 980px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MenuView/>\n              <Header/>\n              <NextList next={props.next}/>\n              <TodayDetails detail='G'/>\n              <Link to={`/${date}/betSlip`}\n              id=\"mobile-betSlip-button\">\n                  <span>\n                      B-S\n                  </span>\n              </Link> \n              </SimpleBar>\n          </MediaQuery>\n        </>\n    );\n}\nconst mapStateToProps=(state)=> {\n    return{\n      next:state.next,\n      allBetSlip:state.allBetSlip,\n      screenStatus:state.screenStatus,\n      remainingBetSlip:state.remainingBetSlip,\n    }\n}\nexport default connect(mapStateToProps, { \n  fetchNextRace,\n  allBetSlipData,\n  betSlipScreen,\n  remainingBetSlipData\n } )(TodayG);\n// export default TodayG;\n","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace,allBetSlipData,betSlipScreen,remainingBetSlipData } from \"../../actions\";\n\nimport MenuView from \"../Nav/Menu\";\n\nimport Header from '../Nav/Header'\nimport TodayDetails from '../Today/TodayDetails'\nimport NextList from '../Next/NextList'\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport RespHeader from '../Nav/RespHeader';\n\nconst TodayH=(props)=> {\n  useEffect(() => {\n    props.fetchNextRace();\n  }, []);\n    props.betSlipScreen(false);\n    useEffect(() => {\n      if (performance.navigation.type === 1) {\n          props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n      }\n  }, [performance.navigation.type]);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    return (\n      <>\n          <MediaQuery query='(min-width: 980px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n\n            <ui-view>\n                <RespHeader/>\n                <NextList next={props.next}/>\n                <main className=\"page-content\">\n                    <div className=\"left-column\">\n                        <ui-view>\n                            <nav className=\"menuItems\">\n                              <TodayDetails detail='H'/>\n                            </nav>\n                        </ui-view>\n                    </div>\n                    <BetSlipHome/>\n                </main>\n            </ui-view>   \n            </SimpleBar>      \n          </MediaQuery>\n          <MediaQuery query='(max-width: 980px)'>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MenuView/>\n              <Header/>\n              <NextList next={props.next}/>\n              <TodayDetails detail='H'/>\n              <Link to={`/${date}/betSlip`}\n              id=\"mobile-betSlip-button\">\n                  <span>\n                      B-S\n                  </span>\n              </Link> \n              </SimpleBar>\n          </MediaQuery>\n      </> \n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n      next:state.next,\n      allBetSlip:state.allBetSlip,\n      screenStatus:state.screenStatus,\n      remainingBetSlip:state.remainingBetSlip\n    }\n}\nexport default connect(mapStateToProps, { \n  fetchNextRace,\n  allBetSlipData,\n  betSlipScreen,\n  remainingBetSlipData\n } )(TodayH);\n","import React,{ useState,useEffect,useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link} from \"react-router-dom\";\nimport {IoIosArrowForward} from \"react-icons/io\"\nimport { fetchNextRace,\n            fetchPathParams} from \"../../actions\";\nimport \"./NextListHome.css\";\nimport HomeImage from \"../../images/Home.gif\"\n\nconst NextListHome = (props)=>{\n    const [diffTime, setdiffTime] = useState(Date.now()-new Date(\"2020-07-03T05:09:00.000Z\"));\n\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        return [year, month, day].join('-');\n    }\n\n    const date=formatDate(Date.now())\n    useEffect(() => {\n        props.fetchNextRace();\n      }, []);\n\n\n    const [nextRace,setnextRace]=useState([]);\n    const [nextRaceGrey,setnextRaceGrey]=useState([]);\n    const [nextRaceHarness,setnextRaceHarness]=useState([]);\n\n\n    const fetchResources=(next)=>{\n        {next.map(item =>{\n            switch(item.meeting.raceType) {\n                case 'R' :\n                    setnextRace(oldArray => [...oldArray, item]);\n                    break\n                case 'G' :\n                    setnextRaceGrey(oldArray => [...oldArray, item]);\n                    break\n                default:\n                    setnextRaceHarness(oldArray => [...oldArray, item]);\n                    break        \n                };\n        })}\n    };\n    useEffect(()=> {\n        if (props.next.length>0) {\n            fetchResources(props.next);\n        }\n    },[props.next]);\n\n    const startTime=(st)=>{\n        var current=new Date(st);\n        var left=(Date.now()-new Date(st))-diffTime\n        left=Date.now()-left+10*60*60*1000\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (minutes<9) {\n         return (hours+\":0\"+minutes)\n        }\n        else return (hours+\":\"+minutes)\n    }\n\n    const renderTodayHome=((details,type)=>{\n        \n        return (        \n            <section className=\"horizontal-pane\">\n            <section className=\"next-to-go-races-section pane page-section\">\n                <div className=\"page-section-heading\">\n                    {type}\n                </div>\n                <race-list races=\"nextToGoRaces\">\n                    <ul className=\"race-list\">\n                        <li>\n                            <a>\n                                <div>\n                                {details?details.length>0?details.map(item => {                             \n                                   return(\n                                        <Link to={{\n                                            slot:item.raceNumber, \n                                            place: item.meeting.meetingName,\n                                            code:item.meeting.venueMnemonic,\n                                            raceType:item.meeting.raceType,\n                                            pathname:`/${date}/${item.meeting.meetingName}/${item.meeting.venueMnemonic}/${item.meeting.raceType}/${item.raceNumber}/Win`\n                                        }} \n                                        onClick={()=>{props.fetchPathParams(\n                                            {\n                                                slot:item.raceNumber, \n                                                place: item.meeting.meetingName,\n                                                code:item.meeting.venueMnemonic,\n                                                raceType:item.meeting.raceType,\n                                            }\n                                        )}}\n                                        className=\"next-item-list-home\">                        \n                                            <time>{startTime(item.raceStartTime)}</time>\n                                            <p>{item.meeting.meetingName} ({item.meeting.location})</p>\n                                        </Link> \n                                )}):\"\":\"\"}\n                                </div>\n                            </a>\n                        </li>\n                    </ul>\n                </race-list>\n            </section>\n        </section>\n        )\n    });\n\n\n    return(\n        <main className=\"page-content\">\n            <div className=\"left-column\">\n                <ui-view>\n                    <div>\n                        <div className=\"page-heading\">\n                            Ready To Take Off\n                        </div>\n                        \n                        <div className=\"row\">\n                            <div className=\"col-sm-4\">\n                                {nextRace?renderTodayHome(nextRace.slice(0,3),'Racing'):\"\"}            \n                            </div>\n                            <div className=\"col-sm-4\">\n                                {nextRaceGrey?renderTodayHome(nextRaceGrey.slice(0,3),'GreyHound'):\"\"}            \n                            </div>\n                            <div className=\"col-sm-4\">\n                                {nextRaceHarness?renderTodayHome(nextRaceHarness.slice(0,3),'Harness'):\"\"}            \n                            </div>\n                        </div>\n                    </div>\n                </ui-view>\n            </div>\n        </main>\n    );\n}; \n\nconst mapStateToProps=(state)=> {\n    return{ \n        next:state.next,\n        pathParam:state.pathParams\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace,fetchPathParams } )(NextListHome);\n\n","import React,{useState,useEffect,useRef} from 'react';\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\nimport { Link} from \"react-router-dom\";\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport Header from '../Nav/Header';\nimport RespHeader from '../Nav//RespHeader';\nimport MenuView from \"../Nav/Menu\";\nimport { remainingBetSlipData } from \"../../actions\";\n\nimport NextListHome from '../Home/NextListHome';\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport \"./Home.css\";\nimport mobileSlipButton from '../BetSlip/MobileLayout/mobileSlipButton';\n\nconst Home=(props) =>{\n    \n      function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        return [year, month, day].join('-');\n    };\n\n    const date=formatDate(Date.now())\n    useEffect(() => {\n        if (performance.navigation.type === 1) {\n            props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n        }\n    }, [performance.navigation.type]);\n    return (\n        <>\n            <MediaQuery query='(min-width: 980px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n                <RespHeader/>\n                    <NextListHome/>\n                </SimpleBar>\n            </MediaQuery>\n            <MediaQuery query='(max-width: 980px)'>\n                <SimpleBar style={{ maxHeight: '100vh' }}>\n                <MenuView/>\n                    <Header/>\n                    <NextListHome/>\n                    <Link to={`/${date}/betSlip`}\n                        id=\"mobile-betSlip-button\">\n                        <span>B-S\n                        </span>\n                    </Link>\n                </SimpleBar>   \n            </MediaQuery>    \n        </>\n    )\n}\nconst mapStateToProps=(state)=> {\n    return{ \n        remainingBetSlip:state.remainingBetSlip,\n    }\n}\nexport default connect(mapStateToProps, { \n    remainingBetSlipData\n } )(Home);\n\n\n\n","import React,{useEffect,useState,useRef} from 'react';\nimport { connect } from 'react-redux';\nimport { Link} from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\nimport _, { isInteger, indexOf } from \"lodash\"\nimport { fetchMeetingDetails,\n    fetchRaceDetails,\n    addBetSlipData,\n    allBetSlipData,\n    countBetSlipData,\n    remainingBetSlipData,\n    betSlipScreen,\n    fetchTodayRacing,\n    fetchPathParams,\n    deleteSingleBet,\n    deleteAllBets\n} from \"../../actions\";\nimport BetSlipHome from '../BetSlip/BetSlipHome';\nimport \"./RaceDetails.css\";\n\nconst RaceDetails = (props,ownProps)=>{\n    const [place, setplace] = useState(initialValuePlace);\n    const [place_slot, setplace_slot] = useState(initialValue);\n\n    const [todayData, settodayData] = useState([]);\n    const [raceData, setraceData] = useState([]);\n    const [pool_fh, setpool_fh] = useState();\n    const [count, setcount] = useState()\n    const [place_list_all, setplace_list_all] = useState([\"NORTHFIELD PARK (USA) Race6\",'ergevdfgdbb','rgergegegeetheeh'])\n    const [addedBet, setaddedBet] = useState(false)\n    const [runnerSelection, setrunnerSelection] = useState([]);\n    const [runner_win_place, setrunner_win_place] = useState({});\n    const [runner_quinella, setrunner_quinella] = useState({});\n    const [pathValues, setpathValues] = useState([])\n    const [showLoading, setShowLoading] = useState(false);\n    const [diffTime, setdiffTime] = useState(Date.now()-new Date(\"2020-07-03T05:09:00.000Z\"))\n    const timerToClearSomewhere = useRef(false) \n\n\n    const [poolFinalList, setpoolFinalList] = useState([]);\n    const [RemainingBets, setRemainingBets] = useState();\n\n    const [finalRemainingBets, setfinalRemainingBets] = useState([]);\n    const [betsUpdated, setbetsUpdated] = useState([]);\n    const [checkUpdate, setcheckUpdate] = useState(false)\n\n// fetching the meeting details and assigning them to races_list\n//fetchMeetingDetails--- meeting details\n    useEffect(() => {\n        props.fetchMeetingDetails();\n    }, [])\n    var races_list=[props.meetingDetails.races];\n    races_list=Object.values(races_list);\n    // var items_list={}\n    // {races_list?races_list.map(item=>{\n    //      items_list=item;\n    // }): items_list=[]};\n    \n\n// store the pathparam, i.e., the slot and place name of the request and fetch the requested race detail\n//place_slot --- has the slot\n// fetchRaceDetails -- action to fetch the race details player/ runner info\n    var initialValue=parseInt(pathValues.slot)?parseInt(pathValues.slot):1\n    var initialValuePlace=parseInt(pathValues.place)?parseInt(pathValues.place):\"\"\n    useEffect(() => {\n        setplace_slot(initialValue)\n    }, [initialValue,initialValuePlace])\n    useEffect(() => {\n        console.log(pathValues.slot)\n        props.fetchRaceDetails(place_slot);\n    }, [place_slot,place])\n\n\n    // store the pathparams and fetch them when reloaded for first time to localstorage to allow reload\n\n    useEffect(() => {\n        if(props.pathParams.code) {\n            setpathValues(props.pathParams)\n            localStorage.setItem('pathParams',JSON.stringify(props.pathParams))\n        }\n    }, [props.pathParams]);\n\n    useEffect(() => {\n        const data =window.localStorage.getItem('pathParams')\n        if (data) {\n            setpathValues(JSON.parse(data))\n            setplace_slot(JSON.parse(data).slot)\n            setplace(JSON.parse(data).place)\n            props.fetchRaceDetails(JSON.parse(data).slot);\n        }\n    }, [])\n\n\n// see if required or not\n    useEffect(() => {\n        props.remainingBetSlipData(props.remainingBetSlip)\n    }, [props.meetingDetails]);\n\n\n\n// component to keep todays date irrespective of the actual data for mocking purpose intially\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        return [year, month, day].join('-');\n    }\n    const date=formatDate(Date.now());\n\n\n\n// the details of the race, amount etc for the corresponding pathparams, ie., venue and slot\n// stored in todayData and raceData\n    useEffect(() => {\n        props.fetchTodayRacing();\n    }, [])\n    useEffect(() => {\n        if(props.todayRacing) {\n            var newArray=props.todayRacing.filter(function (el) {\n                return (\n                    el.meetingName ===pathValues.place &&\n                    el.raceType===pathValues.raceType &&\n                    el.venueMnemonic=== pathValues.code \n                )\n              });\n            settodayData(newArray)\n        }\n    }, [props]);\n\n    useEffect(() => {\n        if(todayData) {\n            if(todayData[0]) {\n                var dataass=todayData[0].races\n                var newArray=dataass.filter(function (el) {\n                    return (\n                        el.raceNumber ===pathValues.slot \n                    )\n                  });\n                setraceData(newArray)            \n            }\n        }\n    }, [todayData])\n\n\n// Component for setting timeout for every second\n// duration for timeleft and start time for the australian standard time format for the required data \n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000)\n\n\n     const duration=(raceStartTime)=>{ \n        var left=(Date.now()-new Date(raceStartTime))-diffTime\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (hours>0 || hours<0) {\n            if (left>0 ) {\n                if (minutes===0){\n                    return(-hours+'h')\n                }\n                else return(-hours+'h'+minutes+'m')\n            }\n            else {\n                if (minutes===0){\n                    return(hours+'h')\n                }\n            } return (hours+'h'+minutes+'m')\n        }\n        if (hours===0 && minutes>=5){\n            if (left>0){\n                return (-minutes+'m')\n            }\n            else return(minutes+'m')\n        } \n        if (hours===0 && (minutes<=5||minutes>=-5) \n            && (minutes>0||minutes<0)) {\n                if (left>0) {\n                    if (seconds===0){\n                        return(-minutes+'m')\n                    } else return (-minutes+'m'+seconds+'s')\n                }\n               else {\n                if (seconds===0){\n                    return(minutes+'m')\n                } else return (minutes+'m'+seconds+'s')\n                }\n        }  \n        if (hours===0 && minutes===0) {\n            if (left>0) {\n                return(-seconds+'s')\n            }\n            else return((seconds+'s'))\n        } \n    };\n\n    const startTime=(st)=>{\n        var current=new Date(st);\n        var left=(Date.now()-new Date(st))-diffTime\n        left=Date.now()-left+10*60*60*1000\n        var delta=Math.abs(left/1000)\n        var days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n        var hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        var minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        var seconds = Math.floor(delta % 60);\n        if (minutes<9) {\n         return (hours+\":0\"+minutes)\n        }\n        else return (hours+\":\"+minutes)\n    };\n\n\n// Results table for the already completed and results declared races\n    const resultsTable=(props)=>{\n        return(\n            <table className=\"race-table-results\">\n                {props.racingDetail.results.length>0?\n                <thead>\n                    <tr>\n                        <th >\n                            Results\n                        </th>\n                        <th >\n                            Number\n                        </th>\n                        <th >\n                            Runner Details\n                        </th>\n                        <th>\n                            Tote\n                        </th>\n                    </tr>\n                </thead>:\"\"}\n                <tbody className=\"\">\n                    {props.racingDetail.results.map(item=>{  \n                        return(\n                            <tr>\n                                <td className=\"result-position\">\n                                    {item.place}\n                                </td>\n                                <td className=\"result-number\">\n                                    {item.runnerNumber} \n                                </td>\n                            <td className=\"runner-details\">\n                                {item.runnerName}\n                                <dl className=\"runner-metadata-list\">\n                                    <dt>\n                                        D\n                                    </dt>\n                                    <dd className=\"full-name\">\n                                        {item.riderDriverName+\" \"}\n                                    </dd>\n                                    <dt>\n                                        T\n                                    </dt>\n                                    <dd className=\"full-name\">\n                                        {item.trainerName}\n                                    </dd>\n                                </dl>\n                            </td>\n                            <td >\n                                <div>\n                                    <div>\n                                        {item.toteWin}\n                                    </div>\n                                    <div >\n                                        {item.totePlace}\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    )})}\n                </tbody>\n            </table>     \n        )\n    };\n\n\n// exotic results for the results declared races\n    const exoticTable=(props)=>{\n        return(\n            <table className=\"race-table\">\n                {props.racingDetail.exoticResults.length>0?\n            <thead >\n                <tr>\n                    <th>\n                        Exotic Results\n                    </th>\n                    <th >\n                        Results\n                    </th>\n                    <th >\n                        Dividend\n                    </th>\n                </tr>\n            </thead>:\"\"}\n            <tbody>\n                {props.racingDetail.exoticResults.map(exotic_item=>\n                    {\n                        return(\n                            <tr >\n                            <td>\n                                {exotic_item.wageringProduct}\n                            </td>\n                            <td >\n                                <div >\n                                    <div>\n                                        <span>\n                                            {exotic_item.Results}        \n                                        </span>\n                                    </div>\n                                </div>\n                            </td>\n                            <td >\n                                <div >\n                                    <div >\n                                        <span>\n                                            {exotic_item.Dividend}        \n                                        </span>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>                                              \n                        )\n                    })}\n            </tbody>\n        </table>\n        )\n    };\n\n\n// runner infor table , this is for all the races\n    const runnerInfoheader=(props)=>{\n        return(\n            <div className=\"runner-info-row\">\n                <div className=\"number-cell\">\n                    No\n                </div>\n                <div className={props.type===\"Win\"?\"name-cell\":\"name-cell-short\"}>\n                    Runner\n                </div>\n                <div className=\"price-cell\">\n                    Win\n                </div>\n                <div className=\"price-cell\">\n                    Place\n                </div>\n                {(props.type===\"Quinella\"||props.type===\"Duet\")?\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                    :(props.type===\"Trifecta\")?\n                    <>\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                        <div className=\"price-cell\">\n                            2nd\n                        </div>\n                        <div className=\"price-cell\">\n                            3rd\n                        </div>\n                    </>\n                    :(props.type===\"First4\")?\n                    <>\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                        <div className=\"price-cell\">\n                            2nd\n                        </div>\n                        <div className=\"price-cell\">\n                            3rd\n                        </div>\n                        <div className=\"price-cell\">\n                            4th\n                        </div>\n                    </>:(props.type===\"Exacta\")?\n                    <>\n                        <div className=\"price-cell\">\n                            1st Box\n                        </div>\n                        <div className=\"price-cell\">\n                            2nd\n                        </div>         \n                    </> :\"\"             \n                }\n\n            </div>\n        )\n    };\n\n// fetching the info for non-desktop versions, from the local storage.,\n// the information of pending bets in the win place\n    useEffect(() => {\n        if (performance.navigation.type === 1 && window.innerWidth<980) {\n            props.remainingBetSlipData(JSON.parse(window.localStorage.getItem('betSlip')))\n        }\n    }, [performance.navigation.type]);\n\n    useEffect(() => {\n        if(RemainingBets && window.innerWidth ) {\n            props.addBetSlipData(RemainingBets);\n            props.remainingBetSlipData(finalRemainingBets);\n            localStorage.setItem('betSlip',JSON.stringify(finalRemainingBets));\n        }\n    }, [finalRemainingBets]);\n\n\n\n\n// handle click for the win/place bets, \n// this will execute if the race is open for betting ie., normal now\n// an object is assigned to runner_win_place and in which the bet details are stored\n    const handleClickWin=(runner_item)=>{\n        if ((raceData[0].raceStatus===\"Normal\")) {\n            // if(props.countBetSlip && props.countBetSlip.length===0) {\n            //     props.countBetSlipData(1);\n            //     setcount((props.countBetSlip));\n            //     setrunner_win_place({\n            //         \"name\":todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber || \"\"\n            //         ,\"runners\":runner_item.runnerNumber,\"win\": null ,\"place\": null\n            //     });\n            // } else {\n            //     props.countBetSlipData(parseInt(props.countBetSlip)+1);\n            //     setcount((props.countBetSlip));\n                setrunner_win_place({\n                    \"name\":todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber || \"\"\n                    ,\"runners\":runner_item.runnerNumber,\"win\": null ,\"place\": null\n                });\n            // }   \n        }\n    };\n\n// send the runner_win_place info to an action creator, \n    useEffect(() => {\n        if ((runner_win_place)) {\n            if(runner_win_place.name) {\n                {props.allBetSlipData(runner_win_place)}\n                props.betSlipScreen(true);\n            }\n\n        }\n    }, [runner_win_place]);\n\n    const handleClickQuinella=(props,runner_item)=>{\n        if ((raceData[0].raceStatus===\"Normal\")) {\n            if(props.countBetSlip && props.countBetSlip.length===0) {\n                props.countBetSlipData(1);\n                setcount((props.countBetSlip));\n                setrunner_quinella({\n                    \"name\":todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber || \"\"\n                    ,\"runners\":runner_item.runnerNumber,\"quinella\": null \n                });\n            } else {\n                props.countBetSlipData(parseInt(props.countBetSlip)+1);\n                setcount((props.countBetSlip));\n                setrunner_quinella({\n                    \"name\":todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber || \"\"\n                    ,\"runners\":runner_item.runnerNumber,\"quinella\": null\n                });\n            }   \n        }\n    };\n\n\n\n\n    // useEffect(() => {\n    //     if(runner_quinella) {\n    //         {props.allBetSlipData(runner_quinella)}\n    //         props.betSlipScreen(true)\n    //     }\n    // }, [runner_quinella])\n    \n\n\n// handling the remaining bets for the non-desktop version\n    useEffect(() => {\n        if(window.innerWidth<980) {\n            // var users=props.allBetSlip;\n            // if(props.screenStatus) {\n            //     users = [users, ...props.remainingBetSlip];\n            // } else {users=[...props.remainingBetSlip]}\n            // if(props.remainingBetSlip) {\n            //     users=Object.values(users)\n            // };\n    \n            // // var users_win=users.filter(e1=> { return e1.win===null });\n            // var grouped = _.reduce(users, (result, user) => {\n            //     if(user){\n            //             (result[user.name] || (result[user.name] = [])).push(user);  \n            //             return result;\n            //     }    \n            // }, {});\n            // console.log(users)\n            if( performance.navigation.type >=1 ) {\n                var users=props.allBetSlip;\n                var rem=props.remainingBetSlip.length<1?JSON.parse(window.localStorage.getItem('betSlip')):props.remainingBetSlip\n                if(props.screenStatus) {\n                    users = [users, ...rem];\n                } else {users=[...rem]}\n            }\n            if(performance.navigation.type == 0 ) {\n                var users=props.allBetSlip;\n                var rem=props.remainingBetSlip.length<1?JSON.parse(window.localStorage.getItem('betSlip')):props.remainingBetSlip\n                if(props.screenStatus) {\n                    users = [users, ...rem];\n                } else {users=[...rem]}\n            }\n            // var users_win=users.filter(e1=> { return e1.win===null });\n            var grouped = _.reduce(users, (result, user) => {\n                if(user){\n                        (result[user.name] || (result[user.name] = [])).push(user);  \n                        return result;\n                }    \n            }, {});\n            var poolList=[]\n            if(grouped) {\n                if(Object.keys(grouped)){\n                    Object.keys(grouped).map(poolname=>{\n                        if(poolname!=\"undefined\") {\n                            var groupedRunners = _.reduce(grouped[poolname], (result, user) => {\n                                if(user){\n                                        (result[user.name] || (result[user.name] = [])).push(user.runners);  \n                                        \n                                        return (Object.values(result).reduce(\n                                            function(accumulator, currentValue) {\n                                              return accumulator.concat(currentValue)\n                                            },\n                                            []\n                                          ));        \n                                }    \n                            }, {});\n                            var groupedRunnersNo=groupedRunners.reduce(function (allNames, name) { \n                                if (name in allNames) {\n                                  allNames[name]++\n                                }\n                                else {\n                                  allNames[name] = 1\n                                }\n                                return(allNames)\n                              }, {})\n                            var itemList=[];\n                            var winList=null;\n                            var placeList=null;\n                            for (var i=0;i<Object.keys(groupedRunnersNo).length;i=i+1){\n                                if(Object.values(groupedRunnersNo)[i]%2!=0) {\n                                    if(isInteger(parseInt(Object.keys(groupedRunnersNo)[i]))) {\n                                        var pos=(_.findIndex(users, {runners: parseInt(Object.keys(groupedRunnersNo)[i])}));      \n                                        itemList.push(users[pos].runners)\n                                        winList=grouped[poolname][grouped[poolname].length-1].win\n                                        placeList=grouped[poolname][grouped[poolname].length-1].place\n                                    } \n                                }\n                                }\n                            if (itemList.length){\n                                var itemPool={\"name\":poolname,\"runners\":itemList, \"win\": winList ,\"place\": placeList}\n                            }\n                            if(poolFinalList){\n                                poolList.push(itemPool)\n                            } else {\n                                poolList=itemPool\n                            }\n                        }     \n                    })\n                    setRemainingBets(poolList)\n                }\n            };\n        }\n    }, [props.allBetSlip]);\n\n    useEffect(() => {\n        if (RemainingBets && window.innerWidth) {\n            setfinalRemainingBets([])\n            RemainingBets.map(items=>{\n                if(items) {\n                    if(items.runners.length>1) {\n                        items.runners.map(runnnerInd=>{\n                            setfinalRemainingBets(oldArray => [...oldArray, \n                                {\"name\":items.name,\"runners\":runnnerInd,\n                                \"win\": items.win ,\"place\": items.place}]);\n                        })\n                    } \n                    else \n                    {   \n                        setfinalRemainingBets(oldArray => [...oldArray,\n                            {\"name\":items.name,\"runners\":items.runners[0],\n                            \"win\": items.win ,\"place\": items.place}])\n                    }\n                }\n            })\n        }\n    }, [RemainingBets]);\n\n\n\n\n    // useEffect(() => {\n    //     if(window.innerWidth>980) {\n    //         if(props.deleteSingleBetData[0] && RemainingBets[0]) {\n    //             if (RemainingBets.length==1){\n    //                 // setstartSlip(false)\n    //                 setRemainingBets([])\n    //                 localStorage.setItem('betSlip',JSON.stringify([]))\n    //             }\n    //             var obje=RemainingBets.filter(e1=> { return e1 != props.deleteSingleBetData })\n    //             setRemainingBets(obje)\n    //             localStorage.setItem('betSlip',JSON.stringify(obje))\n    //         }\n    //     }\n\n\n    // }, [props.deleteSingleBetData])\n\n    // useEffect(() => {\n    //     setRemainingBets([]);\n    //     localStorage.setItem('betSlip',JSON.stringify([]))\n    //     setshowCurrency(false);\n    // }, [props.deletedAll]);\n\n\n    const runnerInfoBody=(props)=>{\n        return(\n            <div className=\"pseudo-body\">\n            {props.racingDetail.runners?props.racingDetail.runners.map(runner_item=>{\n                return(\n                    <div className=\"row-runner\">\n                    <div className=\"number-cell-body\">\n                        {runner_item.runnerNumber}\n                    </div>\n                    <div className={props.type===\"Win\"?\"name-cell-body\":\"name-cell-body-short\"}>\n                        <div >\n                            <div className=\"runner-name-wrapper\">\n                                <div className=\"runner-name\">\n                                    {runner_item.runnerName}\n                                </div>\n                            </div>\n                            <div className=\"runner-metadata-list\">\n                                <dt>\n                                    D\n                                </dt>\n                                <dd className=\"full-name\">\n                                    {runner_item.riderDriverName}\n                                </dd>\n                                <dt>\n                                    T\n                                </dt>\n                                <dd className=\"full-name\">\n                                    {runner_item.trainerName}\n                                </dd>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"price-cell-body\"\n                        onClick={()=>\n                            props.type===\"Win\"?handleClickWin(runner_item):\"\"\n                        } \n                        style={{\n                            backgroundColor:props.remainingBetSlip[0] && todayData[0] &&raceData[0] && props.type===\"Win\" ?\n                            props.remainingBetSlip.filter(e => e.name === todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber\n                            && e.runners === runner_item.runnerNumber\n                            ).length > 0\n                            ?\n                            \"#d3ecef\":\"white\":\"white\",\n                            cursor:props.type===\"Win\"?\"pointer\": \"inherit\" \n                        }}\n                        >\n                        <div className=\"price-cell-body-child\"\n                        style={{\n                            backgroundColor:props.remainingBetSlip[0] && todayData[0] &&raceData[0] && props.type===\"Win\"?\n                            props.remainingBetSlip.filter(e => e.name === todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber\n                            && e.runners === runner_item.runnerNumber\n                            ).length > 0\n                            ?\n                            \"#d3ecef\":\"white\":\"white\"}}\n                        >\n                                    ${runner_item.returnWin}    \n                        </div>\n                        <div className=\"price-cell-body-child\"\n                            style={{\n                                backgroundColor:props.remainingBetSlip[0] && todayData[0] &&raceData[0] && props.type===\"Win\"?\n                                props.remainingBetSlip.filter(e => e.name === todayData[0].meetingName+\" \"+\"(\"+todayData[0].location+\")\"+\" Race \"+raceData[0].raceNumber\n                                && e.runners === runner_item.runnerNumber\n                                ).length > 0\n                                ?\n                                \"#d3ecef\":\"white\":\"white\"}} >                      \n                            ${runner_item.returnPlace}\n                        </div>\n                    </div>\n                    {(props.type===\"Quinella\")?\n                        <div className=\"price-cell-body checkbox\">\n                            <div>\n                                <div>\n                                <input\n                                    name=\"1st\"\n                                    type=\"checkbox\"\n                                    className=\"checkbox-input\"\n                                    onClick={()=>handleClickQuinella(props,runner_item,pool_fh,runnerSelection,place_list_all)}\n                                />                                    \n                                </div>\n                            </div>\n                        </div>\n                        :(props.type===\"Duet\")?\n                        <div className=\"price-cell-body checkbox\">\n                            <div>\n                                <div>\n                                <input\n                                    name=\"1st\"\n                                    type=\"checkbox\"\n                                    className=\"checkbox-input\"\n                                />                                    \n                                </div>\n                            </div>\n                        </div>\n                        :(props.type===\"Trifecta\")?\n                        <>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"1st\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"2nd\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"3rd\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                        :(props.type===\"First4\")?\n                        <>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"1st\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"2nd\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"3rd\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"4th\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                        </>:(props.type===\"Exacta\")?\n                        <>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"1st\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"price-cell-body\">\n                                <div>\n                                    <div>\n                                    <input\n                                        name=\"2nd\"\n                                        type=\"checkbox\"\n                                    />                                    \n                                    </div>\n                                </div>\n                        </div>     \n                        </> :\"\"        \n                    }\n                </div>\n                )\n            }):\"\"}\n        </div>\n        )\n    };\n\n    const runnerInfo=(props)=>{\n        return(\n            <div className=\"race-runners-wrapper results\">\n                <div className=\"pseudo-table\">\n                    {runnerInfoheader(props)}\n                    {runnerInfoBody(props)}\n                </div>\n            </div>\n        )\n    };\n\n    const raceName=(props)=>{\n        const raceSlots=(props)=>{\n            return(                        \n            <div className=\"meeting-race-selector\">\n                <div className=\"meeting-info\">\n                    <div className=\"meeting-info-race-selector-wrapper\">\n                        <div className=\"meeting-info-race-selector\">     \n                            {todayData?todayData[0]?todayData[0].races.map(item=>{\n                                return(\n                                    <Link to={{\n                                        pathname:`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${item.raceNumber}/Win`,\n                                        slot:item.raceNumber, \n                                        place: pathValues.place,\n                                        code:pathValues.code,\n                                        raceType:pathValues.raceType\n                                       \n                                    }}\n                                    onClick={()=>{props.fetchPathParams(\n                                        {\n                                            slot:item.raceNumber, \n                                            place: pathValues.place,\n                                            code:pathValues.code,\n                                            raceType:pathValues.raceType\n                                        }\n                                    )}}\n                                        className={item.raceStatus===\"Paying\"?\n                                        \"meeting-info-race  meeting-info-race-closed\":\n                                        \"meeting-info-race  meeting-info-race-open\"}>\n                                            R{item.raceNumber}  \n                                            <span className={item.raceStatus===\"Paying\"?\"meeting-info-race-results\":\"meeting-info-race-time\"}>\n                                                {item.raceStatus===\"Paying\"?item.results:startTime(item.raceStartTime)} \n                                            </span>\n                                        {/* </a> */}\n                                    </Link>\n                            )}):\"\":\"\"}\n                        </div>\n                    </div>\n                    {/* <div className=\"meeting-info-meeting-conditions\">\n                        <div className=\"meeting-info-track-condition\">\n                            {props.racingDetail.trackCondition}   \n                        </div>\n                        <div className=\"meeting-info-weather-condition\">\n                            <div className=\"meeting-info-weather-condition-description\">\n                                {props.racingDetail.weatherCondition}\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            )\n        };\n    \n        return(\n            <div className=\"\">\n                <div className=\"race-header-container\">\n                    <header className=\"race-header\">\n                        <div className=\"race-header-info\">\n                            <div className=\"race-heading\">\n                                <div className=\"race-number\">\n                                    R{raceData?raceData[0]?\n                                    raceData[0].raceNumber:\"\":\"\"}\n                                </div>\n                                <div className=\"race-header-race-time-not-open\">\n                                    {startTime(raceData?raceData[0]?\n                                    raceData[0].raceStartTime:\"\":\"\")}\n                                </div>\n                            </div>\n                            <div className=\"race-info-wrapper\">\n                                <div className=\"race-name\">\n                                    {raceData?raceData[0]?\n                                    raceData[0].raceName:\"\":\"\"}\n                                </div>\n                                <ul className=\"race-metadata-list\">\n                                <li className=\"status-text\">\n                                {raceData?raceData[0]?\n                                    raceData[0].raceStatus===\"Normal\"?\n                                    duration(raceData[0].raceStartTime):raceData[0].raceStatus:\"\":\"\"}\n                                    {/* {raceData?raceData[0]?\n                                    raceData[0].race?\n                                    (raceData[0].raceStatus===\"Normal\"?\n                                    startTime(raceData[0].raceStartTime):\n                                    raceData[0].raceStatus):\"\":\"\":\"\"} */}\n                                </li>\n                                    <li>{raceData?raceData[0]?\n                                    raceData[0].raceDistance:\"\":\"\"}m</li>\n                                    <li>{todayData?todayData[0]?\n                                    todayData[0].prizeMoney:\"\":\"\"}</li>\n                                </ul>\n                            </div>\n                        </div>\n                        {raceSlots(props)}\n                    </header>    \n                </div>\n            </div>\n        )\n    };\n\n    const poolTot=(props)=>{\n        return(\n            <div className=\"page-section\">\n            <div className=\"info-table\">\n                <div className=\"tabbed-sections\">\n                    <nav className=\"tabs-nav\">\n                        <a className=\"active\">\n                            Pools\n                        </a>\n                    </nav>\n                    <section className=\"tabs-section active\">\n                        <section className=\"section\">\n                            <ul className=\"pools-list\">\n                                {props.racingDetail.poolTotals?props.racingDetail.poolTotals.map(total_item=>{\n                                    return(\n                                        <li>\n                                        <span>\n                                            {total_item.wageringProduct}\n                                        </span>\n                                        <span className=\"amount-span\">\n                                            {total_item.poolTotal}\n                                        </span>\n                                    </li>\n                                    )\n                                }):\"\"}\n                            </ul>\n                        </section>\n                    </section>\n                </div>\n            </div>\n        </div>    \n        )\n    };\n\n    const racetypes=[\n        {\"name\":\"Win\",\"url\":`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${pathValues.slot}/Win`},\n        {\"name\":\"Quinella\",\"url\":`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${pathValues.slot}/Quinella`},\n        {\"name\":\"Trifecta\",\"url\":`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${pathValues.slot}/Trifecta`},\n        {\"name\":\"First4\",\"url\":`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${pathValues.slot}/First4`},\n        {\"name\":\"Exacta\",\"url\":`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${pathValues.slot}/Exacta`},\n        {\"name\":\"Duet\",\"url\":`/${date}/${pathValues.place}/${pathValues.code}/${pathValues.raceType}/${pathValues.slot}/Duet`}\n    ]\n    \n    const placeBets=()=>{\n        return(\n            <div className=\"bet-type-carousel\">\n                <ul className=\"tbc-nav-tabular-list bet-type-carousel-list\">\n                    {racetypes.map(item=>{\n                        return(\n                            <li className=\"tbc-nav-tabular-list-item\">\n                                <Link  to={{pathname:item.url,\n                                    slot:place_slot,\n                                place:place}} \n                                className={item.name===props.type?\"tbc-nav-tabular-item-link selected\":\"tbc-nav-tabular-item-link\"}>\n                                    <div className=\"bet-type-carousel-description\">\n                                        {item.name}\n                                    </div>\n                                    <div className=\"bet-type-carousel-legs\">\n                                    </div>\n                                 </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n                \n            </div>\n        )\n    };\n    return (\n        <main className=\"page-content detail-page\">\n            <div className=\"left-column\">\n                <ui-view>\n                    <div className=\"all-tables\">\n                        {raceName(props)}\n                        <div className=\"page-section\">\n                        </div>\n                        <div className=\"page-section\">  \n                            <div className=\"race-results-wrapper\">\n                                <section className={props.racingDetail?props.racingDetail.raceStatus!==\"Open\":\"\"?\n                                \"runners-section\":\"results-section\"}>\n                                    {raceData?raceData[0]?raceData[0].raceStatus===\"Normal\"?placeBets():\"\":\"\":\"\"}\n                                    <div className=\"page-section-break\">\n                                    </div> \n                                    {raceData?raceData[0]?raceData[0].raceStatus===\"Paying\"?resultsTable(props):\"\":\"\":\"\"}\n                                    {raceData?raceData[0]?raceData[0].raceStatus===\"Paying\"?exoticTable(props):\"\":\"\":\"\"}\n                                    {/* {raceData.raceStatus!=\"Normal\"?exoticTable(props):\"\"} */}\n                                    {runnerInfo(props)}\n                                </section>\n                            </div>\n                        </div>\n                        {poolTot(props)}\n                    </div>\n                </ui-view>\n            </div>\n            <MediaQuery query='(min-width: 980px)'>\n                <BetSlipHome/>\n            </MediaQuery>\n        </main>\n    );\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n        todayRacing:state.todayRacing,\n        slot:ownProps.slot,\n        code:ownProps.code,\n        raceType:ownProps.raceType,\n        place:ownProps.place,\n        type:ownProps.type,\n        meetingDetails:state.meetingDetails,\n        racingDetail:state.racingDetail,\n        betSlipInd:state.betSlipInd,\n        countBetSlip:state.countBetSlip,\n        screenStatus:state.screenStatus,\n        remainingBetSlip:state.remainingBetSlip,\n        allBetSlip:state.allBetSlip,\n        bet_pool_fh_1:ownProps.bet_pool_fh_1,\n        bet_pool_fh_2:ownProps.bet_pool_fh_2,\n        pathParams:state.pathParams,\n        deleteSingleBetData:state.deleteSingleBet,\n        deleteAllBetData:state.deleteAllBet\n    }\n}\nexport default connect(mapStateToProps, \n    { \n        fetchRaceDetails,\n        fetchMeetingDetails,\n        addBetSlipData,\n        allBetSlipData,\n        countBetSlipData,\n        betSlipScreen,\n        remainingBetSlipData,\n        fetchPathParams,\n        fetchTodayRacing,\n        deleteSingleBet,\n        deleteAllBets\n        })\n    (RaceDetails);\n\n\n\n","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\nimport MenuView from \"../../Nav/Menu\";\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageWin=(props,ownProps)=> {\n    useEffect(() => {\n      props.fetchNextRace();\n    }, []);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n     function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n  \n      if (month.length < 2) \n          month = '0' + month;\n      if (day.length < 2) \n          day = '0' + day;\n  \n      return [year, month, day].join('-');\n  }\n\n  const date=formatDate(Date.now())\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Win\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Win\"/>\n                  <Link to={`/${date}/betSlip`}\n                    id=\"mobile-betSlip-button\">\n                    <span>\n                      B-S\n                    </span>\n                </Link>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageWin);","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\nimport MenuView from \"../../Nav/Menu\";\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageQuinella=(props,ownProps)=> {\n  useEffect(() => {\n    props.fetchNextRace();\n  }, []);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n     function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n  \n      if (month.length < 2) \n          month = '0' + month;\n      if (day.length < 2) \n          day = '0' + day;\n  \n      return [year, month, day].join('-');\n  }\n\n  const date=formatDate(Date.now())\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Quinella\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Quinella\"/>\n                  <Link to={`/${date}/betSlip`}\n                    id=\"mobile-betSlip-button\">\n                    <span>\n                      B-S\n                    </span>\n                </Link>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageQuinella);","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\nimport MenuView from \"../../Nav/Menu\";\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageTrifecta=(props,ownProps)=> {\n  useEffect(() => {\n    props.fetchNextRace();\n  }, []);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n     function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n  \n      if (month.length < 2) \n          month = '0' + month;\n      if (day.length < 2) \n          day = '0' + day;\n  \n      return [year, month, day].join('-');\n  }\n\n  const date=formatDate(Date.now())\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Trifecta\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Trifecta\"/>\n                  <Link to={`/${date}/betSlip`}\n                    id=\"mobile-betSlip-button\">\n                    <span>\n                      B-S\n                    </span>\n                </Link>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageTrifecta);","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\nimport MenuView from \"../../Nav/Menu\";\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageFirst4=(props,ownProps)=> {\n  useEffect(() => {\n    props.fetchNextRace();\n  }, []);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n     function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n  \n      if (month.length < 2) \n          month = '0' + month;\n      if (day.length < 2) \n          day = '0' + day;\n  \n      return [year, month, day].join('-');\n  }\n\n  const date=formatDate(Date.now())\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"First4\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"First4\"/>\n                  <Link to={`/${date}/betSlip`}\n                    id=\"mobile-betSlip-button\">\n                    <span>\n                      B-S\n                    </span>\n                </Link>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageFirst4);","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\nimport MenuView from \"../../Nav/Menu\";\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageExacta=(props,ownProps)=> {\n    useEffect(() => {\n      props.fetchNextRace();\n    }, [])\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n     function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n  \n      if (month.length < 2) \n          month = '0' + month;\n      if (day.length < 2) \n          day = '0' + day;\n  \n      return [year, month, day].join('-');\n  }\n\n  const date=formatDate(Date.now())\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Exacta\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Exacta\"/>\n                  <Link to={`/${date}/betSlip`}\n                    id=\"mobile-betSlip-button\">\n                    <span>\n                      B-S\n                    </span>\n                </Link>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageExacta);","import React,{useState,useEffect,useRef} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport MediaQuery from 'react-responsive';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport { fetchNextRace } from \"../../../actions\";\n\nimport MenuView from \"../../Nav/Menu\";\n\nimport Header from '../../Nav/Header';\nimport NextList from '../../Next/NextList';\nimport RaceDetails from '../../RaceDetail/RaceDetails';\nimport RespHeader from '../../Nav/RespHeader';\n\nimport \"./RaceDetails.css\";\n\nconst RaceDetailsPageDuet=(props,ownProps)=> {\n  useEffect(() => {\n    props.fetchNextRace();\n  }, []);\n    const [showLoading, setShowLoading] = useState(false)\n    const timerToClearSomewhere = useRef(false) //now you can pass timer to another component\n    useEffect(\n       () => {\n         timerToClearSomewhere.current = setInterval(() => setShowLoading(true), 800)\n         return () => {\n           clearInterval(timerToClearSomewhere.current)\n         }\n       },\n       [showLoading]\n     )\n     setTimeout(()=>{\n        setShowLoading(false)\n        return () => {\n            clearInterval(timerToClearSomewhere.current)\n          }\n     },1000);\n     function formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n  \n      if (month.length < 2) \n          month = '0' + month;\n      if (day.length < 2) \n          day = '0' + day;\n  \n      return [year, month, day].join('-');\n  }\n\n  const date=formatDate(Date.now())\n    return (\n        <div>\n          <SimpleBar style={{ maxHeight: '100vh' }}>\n              <MediaQuery query='(min-width: 980px)'>\n                  <RespHeader/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Duet\"/>\n                  </MediaQuery>\n              <MediaQuery query='(max-width: 980px)'>\n                  <MenuView/>\n                  <Header/>\n                  <NextList next={props.next}/>\n                  <RaceDetails slot={props.location.slot} \n                              place={props.location.place}\n                              code={props.location.code}\n                              raceType={props.location.raceType} \n                              type=\"Duet\"/>\n                  <Link to={`/${date}/betSlip`}\n                    id=\"mobile-betSlip-button\">\n                    <span>\n                      B-S\n                    </span>\n                </Link>\n              </MediaQuery>   \n            </SimpleBar>\n        </div>\n    )\n};\n\nconst mapStateToProps=(state,ownProps)=> {\n    return{ \n      next:state.next,\n    }\n}\nexport default connect(mapStateToProps, { fetchNextRace } )(RaceDetailsPageDuet);","import React from 'react';\n// import BetSlipHomeMobile from '../BetSlip/BetSlipHomeMobile';\nimport Header from '../Nav/Header';\nimport MenuView from \"../Nav/Menu\";\nimport BetSlipHome from '../BetSlip/BetSlipHome';\n\nconst MobileBetSlipScreen=() =>{\n    return (\n        <>\n            <MenuView/>\n            <Header/>\n            <BetSlipHome/>\n        </>\n    )\n}\nexport default MobileBetSlipScreen;\n\n\n\n\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { hot } from 'react-hot-loader/root';\n\n\nimport history from \"./history\";\nimport NextScreen from './components/Screens/NextScreen';\nimport TodayR from './components/Screens/TodayR';\nimport TodayG from './components/Screens/TodayG';\nimport TodayH from './components/Screens/TodayH';\nimport Home from './components/Screens/Home';\n\n\nimport RaceDetailsPageWin from './components/Screens/PlaceBetScreen/RaceDetailsPageWin';\nimport RaceDetailsPageWinQuinella from './components/Screens/PlaceBetScreen/RaceDetailsPageQuinella';\nimport RaceDetailsPageWinTrifecta from './components/Screens/PlaceBetScreen/RaceDetailsPageTrifecta';\nimport RaceDetailsPageWinFirst4 from './components/Screens/PlaceBetScreen/RaceDetailsPageFirst4';\nimport RaceDetailsPageWinExacta from './components/Screens/PlaceBetScreen/RaceDetailsPageExacta';\nimport RaceDetailsPageWinDuet from './components/Screens/PlaceBetScreen/RaceDetailsPageDuet';\nimport MobileBetSlipScreen from './components/Screens/MobileBetSlipScreen';\n\nfunction App() {\n  return (\n    <Router history={history} basename={process.env.PUBLIC_URL}>\n      <div>\n          <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/next-to-go\" exact component={NextScreen}/>\n              <Route path=\"/:date/R\" exact component={TodayR}/> \n              <Route path=\"/:date/G\" exact component={TodayG}/> \n              <Route path=\"/:date/H\" exact component={TodayH}/> \n              <Route path=\"/:date/:place/:code/:type/:slot/Win\" exact component={RaceDetailsPageWin}/>\n              <Route path=\"/:date/betSlip\" exact component={MobileBetSlipScreen}/>\n              <Route path=\"/:date/:place/:code/:type/:slot/Quinella\" exact component={RaceDetailsPageWinQuinella}/>\n              <Route path=\"/:date/:place/:code/:type/:slot/Trifecta\" exact component={RaceDetailsPageWinTrifecta}/>\n              <Route path=\"/:date/:place/:code/:type/:slot/First4\" exact component={RaceDetailsPageWinFirst4}/>\n              <Route path=\"/:date/:place/:code/:type/:slot/Exacta\" exact component={RaceDetailsPageWinExacta}/>\n              <Route path=\"/:date/:place/:code/:type/:slot/Duet\" exact component={RaceDetailsPageWinDuet}/>  \n          </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default hot(App);\n","import {combineReducers} from 'redux';\nimport {firebaseReducer} from \"react-redux-firebase\";\nimport {firestoreReducer} from \"redux-firestore\";\n\nimport nextReducer from './nextReducer';\nimport nextReducerHome from './nextReducerHome';\n\nimport todayRacing from './todayRacing';\nimport racingDetail from './racingDetail';\nimport meetingDetails from './meetingDetails';\nimport pathParams from './pathParamReducer';\n\n\n\nimport winPlaceBetreducer from \"./winPlaceBetreducer\";\nimport betSlipIndreducer from \"./betSlipInd\";\nimport allBetSlipDatareducer from \"./allBetSlipData\";\nimport screenStatusReducers from \"./screenStatusReducers\";\nimport postWinPlaceReducer from \"./postWinPlace\";\n\nimport deleteBetSlipReducer from  \"./deleteBetSlip\";\nimport remainingBetSlipReducer from  \"./remainingBetSlipData\";\n\nimport countBetSlipReducer from  \"./countBetSlipData\"\nimport deleteSingleBetReducer from \"./deleteSingleBet\";\nimport deleteAllBetsReducer from \"./deleteAllBets\";\n\nexport const rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n});\nexport default combineReducers({\n    next: nextReducer,\n    nextHome:nextReducerHome,\n    todayRacing: todayRacing,\n    racingDetail: racingDetail,\n    meetingDetails: meetingDetails,\n    pathParams:pathParams,\n    winPlaceBet: winPlaceBetreducer,\n    betSlipInd: betSlipIndreducer,\n    allBetSlip: allBetSlipDatareducer,\n    deleteBetSlip:deleteBetSlipReducer,\n    screenStatus:screenStatusReducers,\n    remainingBetSlip:remainingBetSlipReducer,\n    countBetSlip:countBetSlipReducer,\n    postWinPlace:postWinPlaceReducer,\n    deleteSingleBet:deleteSingleBetReducer,\n    deleteAllBet:deleteAllBetsReducer\n});","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_NEXT_RACE':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_NEXT_RACE_HOME':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_TODAY_RACING':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_RACE_DETAIL':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_MEETING_DETAILS':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_PATH_PARAMS':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'FETCH_WIN_PLACE_BET':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","import { act } from \"react-dom/test-utils\";\n\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'ADD_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state={}, action)=> {\n    switch (action.type) {\n        case 'ALL_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'DELETE_BET_SLIP_DATA':\n            return [...state,action.payload]\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'BET_SLIP_SCREEN':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'REMAINING_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","\nexport default (state=[], action)=> {\n    switch (action.type) {\n        case 'COUNT_BET_SLIP_DATA':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","export default (state=[], action)=> {\n    switch (action.type) {\n        case 'POST_WIN_PLACE':\n            return action.payload\n        default:\n            return state;\n    }\n};\n","import { act } from \"react-dom/test-utils\";\r\n\r\nexport default (state=[], action)=> {\r\n    switch (action.type) {\r\n        case 'DELETE_SINGLE_BET':\r\n            return [action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nexport default (state=false, action)=> {\r\n    switch (action.type) {\r\n        case 'DELETE_All_BET':\r\n            return [action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport reducers from \"./reducers\";\nimport \"./index.css\";\n\nconst store=createStore(reducers,applyMiddleware(thunk))\nReactDOM.render(\n    <Provider store={store}>\n            <App/>\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}